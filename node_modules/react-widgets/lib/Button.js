"use strict";

exports.__esModule = true;
exports.default = void 0;

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _classnames = _interopRequireDefault(require("classnames"));

var _Icon = require("./Icon");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

var propTypes = {
  type: _propTypes.default.string,
  disabled: _propTypes.default.bool,
  label: _propTypes.default.string,
  icon: _propTypes.default.node,
  busy: _propTypes.default.bool,
  active: _propTypes.default.bool,
  variant: _propTypes.default.oneOf(['primary', 'select']),
  component: _propTypes.default.any,
  spinner: _propTypes.default.node,
  acceptFocus: _propTypes.default.bool
};

function Button(_ref) {
  var className = _ref.className,
      disabled = _ref.disabled,
      label = _ref.label,
      icon = _ref.icon,
      busy = _ref.busy,
      active = _ref.active,
      acceptFocus = _ref.acceptFocus,
      children = _ref.children,
      _ref$variant = _ref.variant,
      variant = _ref$variant === void 0 ? 'primary' : _ref$variant,
      _ref$spinner = _ref.spinner,
      spinner = _ref$spinner === void 0 ? _Icon.Spinner : _ref$spinner,
      _ref$component = _ref.component,
      Tag = _ref$component === void 0 ? 'button' : _ref$component,
      props = _objectWithoutPropertiesLoose(_ref, ["className", "disabled", "label", "icon", "busy", "active", "acceptFocus", "children", "variant", "spinner", "component"]);

  var type = props.type;
  if (Tag === 'button') type = type || 'button';
  if (!acceptFocus) props.tabIndex = '-1';
  return _react.default.createElement(Tag, _extends({}, props, {
    title: label,
    type: type,
    disabled: disabled,
    "aria-disabled": disabled,
    "aria-label": label,
    className: (0, _classnames.default)(className, 'rw-btn', !acceptFocus && 'rw-outline-none', active && !disabled && 'rw-state-active', variant && 'rw-btn-' + variant)
  }), busy ? spinner : icon, children);
}

Button.propTypes = propTypes;
var _default = Button;
exports.default = _default;
module.exports = exports["default"];