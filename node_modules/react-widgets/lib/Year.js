"use strict";

exports.__esModule = true;
exports.default = void 0;

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _CalendarView = _interopRequireDefault(require("./CalendarView"));

var _dates = _interopRequireDefault(require("./util/dates"));

var _ = require("./util/_");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function YearView(_ref) {
  var focusedItem = _ref.focusedItem,
      disabled = _ref.disabled,
      onChange = _ref.onChange,
      value = _ref.value,
      today = _ref.today,
      min = _ref.min,
      localizer = _ref.localizer,
      max = _ref.max,
      props = _objectWithoutPropertiesLoose(_ref, ["focusedItem", "disabled", "onChange", "value", "today", "min", "localizer", "max"]);

  var months = _dates.default.monthsInYear(_dates.default.year(focusedItem));

  return _react.default.createElement(_CalendarView.default, _extends({}, props, {
    onChange: onChange,
    focusedItem: focusedItem
  }), _react.default.createElement(_CalendarView.default.Body, null, (0, _.chunk)(months, 4).map(function (row, rowIdx) {
    return _react.default.createElement(_CalendarView.default.Row, {
      key: rowIdx
    }, row.map(function (date, colIdx) {
      var label = localizer.formatDate(date, 'header');
      return _react.default.createElement(_CalendarView.default.Cell, {
        key: colIdx,
        label: label,
        date: date,
        now: today,
        min: min,
        max: max,
        unit: "month",
        onChange: onChange,
        focusedItem: focusedItem,
        selected: value,
        disabled: disabled
      }, localizer.formatDate(date, 'month'));
    }));
  })));
}

YearView.propTypes = {
  today: _propTypes.default.instanceOf(Date),
  value: _propTypes.default.instanceOf(Date),
  focusedItem: _propTypes.default.instanceOf(Date),
  min: _propTypes.default.instanceOf(Date),
  max: _propTypes.default.instanceOf(Date),
  onChange: _propTypes.default.func.isRequired,
  localizer: _propTypes.default.object.isRequired,
  disabled: _propTypes.default.bool
};
var _default = YearView;
exports.default = _default;
module.exports = exports["default"];