"use strict";

exports.__esModule = true;
exports.default = void 0;

var _classnames = _interopRequireDefault(require("classnames"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireDefault(require("react"));

var _CalendarView = _interopRequireDefault(require("./CalendarView"));

var _dates = _interopRequireDefault(require("./util/dates"));

var _ = require("./util/_");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function MonthView(_ref) {
  var className = _ref.className,
      focusedItem = _ref.focusedItem,
      today = _ref.today,
      disabled = _ref.disabled,
      onChange = _ref.onChange,
      value = _ref.value,
      min = _ref.min,
      max = _ref.max,
      localizer = _ref.localizer,
      Day = _ref.dayComponent,
      props = _objectWithoutPropertiesLoose(_ref, ["className", "focusedItem", "today", "disabled", "onChange", "value", "min", "max", "localizer", "dayComponent"]);

  var month = _dates.default.visibleDays(focusedItem, localizer.firstOfWeek);

  var rows = (0, _.chunk)(month, 7);
  return _react.default.createElement(_CalendarView.default, _extends({}, props, {
    onChange: onChange,
    focusedItem: focusedItem,
    className: (0, _classnames.default)(className, 'rw-calendar-month')
  }), _react.default.createElement("thead", {
    className: "rw-calendar-head"
  }, _react.default.createElement("tr", {
    className: "rw-calendar-row"
  }, rows[0].map(function (date, idx) {
    return _react.default.createElement("th", {
      scope: "col",
      className: "rw-head-cell",
      key: idx
    }, localizer.formatDate(date, 'weekday'));
  }))), _react.default.createElement(_CalendarView.default.Body, null, rows.map(function (row, rowIdx) {
    return _react.default.createElement(_CalendarView.default.Row, {
      key: rowIdx
    }, row.map(function (date, colIdx) {
      var formattedDate = localizer.formatDate(date, 'dayOfMonth');
      var label = localizer.formatDate(date, 'footer');
      return _react.default.createElement(_CalendarView.default.Cell, {
        key: colIdx,
        label: label,
        date: date,
        now: today,
        min: min,
        max: max,
        unit: "day",
        viewUnit: "month",
        onChange: onChange,
        focusedItem: focusedItem,
        selected: value,
        disabled: disabled
      }, Day ? _react.default.createElement(Day, {
        date: date,
        label: formattedDate
      }) : formattedDate);
    }));
  })));
}

MonthView.propTypes = {
  today: _propTypes.default.instanceOf(Date),
  value: _propTypes.default.instanceOf(Date),
  focusedItem: _propTypes.default.instanceOf(Date),
  min: _propTypes.default.instanceOf(Date),
  max: _propTypes.default.instanceOf(Date),
  onChange: _propTypes.default.func.isRequired,
  localizer: _propTypes.default.object.isRequired,
  dayComponent: _propTypes.default.any,
  disabled: _propTypes.default.bool
};
var _default = MonthView;
exports.default = _default;
module.exports = exports["default"];