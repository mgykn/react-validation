{"ast":null,"code":"import axios from 'axios';\nimport { dispatchItem, removeAllCache } from './actions';\nimport { store } from '../App';\nvar baseUrl = process.env.REACT_APP_APIURLS_HOST;\nexport function call(url, type, data, successFunc, errorFunc, isBlobRequest) {\n  store.dispatch(dispatchItem('LOADING', true));\n  var headers = {\n    'Content-Type': 'application/json'\n  };\n\n  if (localStorage.getItem('user') != null) {\n    headers['Authorization'] = localStorage.getItem('user');\n  } else if (store.getState().app.loginAccessToken !== '') {\n    headers['Authorization'] = store.getState().app.loginAccessToken;\n  }\n\n  axios({\n    method: type,\n    url: baseUrl + url,\n    headers: headers,\n    data: data\n  }).then(function (res) {\n    var data = res.data;\n\n    if (isBlobRequest) {\n      successFunc(data);\n    } else {\n      var isSuccess = data.status == \"SUCCESS\";\n\n      if (data.statusDescription != '') {\n        var notification = {};\n        notification.message = data.statusDescription;\n\n        if (isSuccess) {\n          notification.isError = false;\n        } else {\n          notification.isError = true;\n        }\n\n        store.dispatch(dispatchItem('NOTIFICATION', notification));\n      }\n\n      if (isSuccess) {\n        if (successFunc) {\n          successFunc(data);\n        }\n      } else {\n        if (errorFunc) {\n          errorFunc(data);\n        }\n      }\n    }\n\n    store.dispatch(dispatchItem('LOADING', false));\n  }).catch(function (error) {\n    var notification = {\n      isError: true,\n      message: 'Bir hata oluştu, lütfen daha sonra tekrar deneyin.'\n    };\n\n    if (error.response) {\n      if (error.response.status === 401) {\n        localStorage.removeItem('user');\n        localStorage.removeItem('userType');\n        store.dispatch(dispatchItem('ACCESS_TOKEN', {\n          accessToken: '',\n          userType: ''\n        }));\n        store.dispatch(removeAllCache);\n        window.location.href = \"/\";\n      } else if (error.response.status === 403) {\n        window.location.href = \"/\";\n      } else {}\n\n      if (error.response.data && error.response.data.statusDescription) {\n        notification[\"message\"] = error.response.data.statusDescription;\n      }\n    }\n\n    store.dispatch(dispatchItem('NOTIFICATION', notification));\n\n    if (error.response && error.response.data) {\n      errorFunc(error.response.data);\n    } else {\n      errorFunc();\n    }\n\n    store.dispatch(dispatchItem('LOADING', false));\n  });\n}","map":{"version":3,"sources":["C:\\Users\\taertan\\git\\onemessaging\\src\\actions\\apiCaller.js"],"names":["axios","dispatchItem","removeAllCache","store","baseUrl","process","env","REACT_APP_APIURLS_HOST","call","url","type","data","successFunc","errorFunc","isBlobRequest","dispatch","headers","localStorage","getItem","getState","app","loginAccessToken","method","then","res","isSuccess","status","statusDescription","notification","message","isError","catch","error","response","removeItem","accessToken","userType","window","location","href"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport { dispatchItem, removeAllCache } from './actions';\r\nimport { store } from '../App';\r\n\r\nconst baseUrl = process.env.REACT_APP_APIURLS_HOST;\r\n\r\nexport function call(url, type, data, successFunc, errorFunc, isBlobRequest) {\r\n    store.dispatch(dispatchItem('LOADING', true));\r\n\r\n    var headers = {\r\n        'Content-Type': 'application/json'\r\n    }\r\n    \r\n    if(localStorage.getItem('user') != null)\r\n    {\r\n        headers['Authorization'] = localStorage.getItem('user');\r\n    }\r\n    else if(store.getState().app.loginAccessToken !== '')\r\n    {\r\n        headers['Authorization'] = store.getState().app.loginAccessToken;\r\n    }\r\n\r\n    axios({\r\n        method: type,\r\n        url: baseUrl + url,\r\n        headers: headers, \r\n        data: data\r\n      }).then(res => {\r\n        var data = res.data;\r\n\r\n        if(isBlobRequest)\r\n        {\r\n            successFunc(data);\r\n        }\r\n        else {\r\n            var isSuccess = data.status == \"SUCCESS\";\r\n            \r\n            if(data.statusDescription != '')\r\n            {\r\n                var notification = {};\r\n                notification.message = data.statusDescription;\r\n                if(isSuccess)\r\n                {\r\n                    notification.isError = false;\r\n                }\r\n                else {\r\n                    notification.isError = true;\r\n                }\r\n    \r\n                store.dispatch(dispatchItem('NOTIFICATION', notification));\r\n            }\r\n            \r\n            if(isSuccess)\r\n            {\r\n                if(successFunc)\r\n                {\r\n                    successFunc(data);\r\n                }\r\n            }\r\n            else {\r\n                if(errorFunc)\r\n                {\r\n                    errorFunc(data);\r\n                }\r\n            }\r\n        }\r\n\r\n        store.dispatch(dispatchItem('LOADING', false));\r\n\r\n    }).catch(function(error) {\r\n        var notification = {\r\n            isError: true,\r\n            message: 'Bir hata oluştu, lütfen daha sonra tekrar deneyin.'\r\n        }\r\n\r\n        if(error.response)\r\n        {\r\n            if(error.response.status === 401)\r\n            {\r\n                localStorage.removeItem('user');\r\n                localStorage.removeItem('userType');\r\n                store.dispatch(dispatchItem('ACCESS_TOKEN', { accessToken: '', userType: '' }));\r\n                \r\n                store.dispatch(removeAllCache)\r\n\r\n                \r\n                window.location.href = \"/\";\r\n            }\r\n            else if(error.response.status === 403)\r\n            {\r\n                window.location.href = \"/\";\r\n            }\r\n            else\r\n            {\r\n                \r\n            }\r\n\r\n            if(error.response.data && error.response.data.statusDescription)\r\n            {\r\n                notification[\"message\"] = error.response.data.statusDescription;\r\n            }\r\n        }\r\n        \r\n        \r\n        store.dispatch(dispatchItem('NOTIFICATION', notification));\r\n        \r\n        if(error.response && error.response.data)\r\n        {\r\n            errorFunc(error.response.data);\r\n        }\r\n        else {\r\n            errorFunc();\r\n        }\r\n\r\n        store.dispatch(dispatchItem('LOADING', false));\r\n    });\r\n}"]},"metadata":{},"sourceType":"module"}