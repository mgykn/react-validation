{"ast":null,"code":"import _objectSpread from \"/Users/mugeyakin/Projects/react/react-validation/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/mugeyakin/Projects/react/react-validation/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/mugeyakin/Projects/react/react-validation/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/mugeyakin/Projects/react/react-validation/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/mugeyakin/Projects/react/react-validation/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/Users/mugeyakin/Projects/react/react-validation/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/mugeyakin/Projects/react/react-validation/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/mugeyakin/Projects/react/react-validation/src/layouts/popupcontents/LoginPopup.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport Form from '../../components/form/form';\nimport { login, dispatchItem } from '../../actions/actions';\n\nvar LoginPopup =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(LoginPopup, _React$Component);\n\n  function LoginPopup(props) {\n    var _this;\n\n    _classCallCheck(this, LoginPopup);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(LoginPopup).call(this, props));\n    _this.state = {\n      userType: '|Standart|',\n      formModelStandart: {\n        email: {\n          value: '',\n          name: 'email',\n          type: 'text',\n          label: 'E-posta Adresi',\n          placeholder: 'E-posta adresiniz',\n          error: 'Lütfen geçerli bir e-posta adresi girin.',\n          autofocus: true,\n          valid: false,\n          touched: false,\n          validationRules: {\n            isRequired: true,\n            email: true\n          }\n        },\n        password: {\n          value: '',\n          name: 'password',\n          type: 'password',\n          label: 'Şifre',\n          placeholder: 'Şifreniz',\n          error: 'Lütfen şifrenizi girin.',\n          valid: false,\n          touched: false,\n          validationRules: {\n            isRequired: true\n          }\n        }\n      },\n      formModelXI: {\n        email: {\n          value: '',\n          name: 'email',\n          type: 'text',\n          label: 'E-posta Adresi',\n          placeholder: 'E-posta adresiniz',\n          error: 'Lütfen geçerli bir e-posta adresi girin.',\n          autofocus: true,\n          valid: false,\n          touched: false,\n          validationRules: {\n            isRequired: true,\n            email: true\n          }\n        },\n        password: {\n          value: '',\n          name: 'password',\n          type: 'password',\n          label: 'Şifre',\n          placeholder: 'Şifreniz',\n          error: 'Lütfen şifrenizi girin.',\n          valid: false,\n          touched: false,\n          validationRules: {\n            isRequired: true\n          }\n        }\n      },\n      formModelSales: {\n        email: {\n          value: '',\n          name: 'email',\n          type: 'text',\n          label: 'Kullanıcı Adı',\n          placeholder: 'Kullanıcı adınız',\n          error: 'Lütfen kullanıcı adınızı girin.',\n          autofocus: true,\n          valid: false,\n          touched: false,\n          validationRules: {\n            isRequired: true\n          }\n        },\n        password: {\n          value: '',\n          name: 'password',\n          type: 'password',\n          label: 'Şifre',\n          placeholder: 'Şifreniz',\n          error: 'Lütfen şifrenizi girin.',\n          valid: false,\n          touched: false,\n          validationRules: {\n            isRequired: true\n          }\n        }\n      }\n    };\n    _this.changeActivePopup = _this.changeActivePopup.bind(_assertThisInitialized(_this));\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_this));\n    _this.changeUserType = _this.changeUserType.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(LoginPopup, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var accessTokenStored = localStorage.getItem('user');\n      var userTypeStored = localStorage.getItem('userType');\n\n      if (accessTokenStored !== null && userTypeStored !== null) {\n        this.changeActivePopup('');\n      } else {\n        localStorage.removeItem('user');\n        localStorage.removeItem('userType');\n      }\n\n      var emailInputs = document.getElementsByName('email');\n\n      if (emailInputs.length > 0) {\n        emailInputs[0].focus();\n      }\n    }\n  }, {\n    key: \"changeActivePopup\",\n    value: function changeActivePopup(activePopup) {\n      this.props.dispatch(dispatchItem('POPUP', activePopup));\n    }\n  }, {\n    key: \"changeUserType\",\n    value: function changeUserType(type) {\n      var _this2 = this;\n\n      if (type == '|Standart|') {\n        this.setState({\n          formModelSales: _objectSpread({}, this.state.formModelSales, {\n            email: _objectSpread({}, this.state.formModelSales.email, {\n              value: '',\n              valid: false,\n              touched: false\n            }),\n            password: _objectSpread({}, this.state.formModelSales.password, {\n              value: '',\n              valid: false,\n              touched: false\n            })\n          })\n        }, function () {\n          _this2.setState({\n            userType: type\n          }, function () {\n            var emailInputs = document.getElementsByName('email');\n\n            if (emailInputs.length > 0) {\n              emailInputs[0].focus();\n            }\n          });\n        });\n      } else if (type == '|Sales|') {\n        this.setState({\n          formModelStandart: _objectSpread({}, this.state.formModelStandart, {\n            email: _objectSpread({}, this.state.formModelStandart.email, {\n              value: '',\n              valid: false,\n              touched: false\n            }),\n            password: _objectSpread({}, this.state.formModelStandart.password, {\n              value: '',\n              valid: false,\n              touched: false\n            })\n          })\n        }, function () {\n          _this2.setState({\n            userType: type\n          }, function () {\n            var emailInputs = document.getElementsByName('email');\n\n            if (emailInputs.length > 0) {\n              emailInputs[0].focus();\n            }\n          });\n        });\n      } else {\n        this.setState({\n          formModelXI: _objectSpread({}, this.state.formModelXI, {\n            email: _objectSpread({}, this.state.formModelXI.email, {\n              value: '',\n              valid: false,\n              touched: false\n            }),\n            password: _objectSpread({}, this.state.formModelXI.password, {\n              value: '',\n              valid: false,\n              touched: false\n            })\n          })\n        }, function () {\n          _this2.setState({\n            userType: type\n          }, function () {\n            var emailInputs = document.getElementsByName('email');\n\n            if (emailInputs.length > 0) {\n              emailInputs[0].focus();\n            }\n          });\n        });\n      }\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit(data) {\n      var _this3 = this;\n\n      localStorage.setItem('userEmail', data.email);\n      this.props.dispatch(dispatchItem('USER_EMAIL', data.email));\n      this.props.dispatch(login(data, function (data) {\n        var userType = data.role;\n\n        if (_this3.state.userType.indexOf('|' + userType + '|') < 0) {\n          var notification = {\n            message: 'Yanlış alandan giriş yaptınız.',\n            isError: true\n          };\n\n          _this3.props.dispatch(dispatchItem('NOTIFICATION', notification));\n        } else {\n          var loginAccessToken = data.token;\n\n          _this3.props.dispatch(dispatchItem('LOGIN_ACCESS_TOKEN', loginAccessToken));\n\n          _this3.changeActivePopup('otpSms');\n        }\n      }, function (data) {}));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      return React.createElement(\"div\", {\n        className: \"popup-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"popup-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254\n        },\n        __self: this\n      }, \"One Messaging'e Giri\\u015F Yap\"), React.createElement(\"div\", {\n        className: \"tabs\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"tab-menu\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        className: this.state.userType == \"|Standart|\" ? \"active\" : \"\",\n        href: \"javascript:void(0)\",\n        onClick: function onClick() {\n          return _this4.changeUserType('|Standart|');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260\n        },\n        __self: this\n      }, \"Kurumsal\"), React.createElement(\"a\", {\n        className: this.state.userType == \"|Sales|\" ? \"active\" : \"\",\n        href: \"javascript:void(0)\",\n        onClick: function onClick() {\n          return _this4.changeUserType('|Sales|');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261\n        },\n        __self: this\n      }, \"Aktivasyon\"), React.createElement(\"a\", {\n        className: this.state.userType == \"|XIPartner|XIVodafone|XIOtd\" ? \"active\" : \"\",\n        href: \"javascript:void(0)\",\n        onClick: function onClick() {\n          return _this4.changeUserType('|XIPartner|XIVodafone|');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262\n        },\n        __self: this\n      }, \"Pazarlama\")), React.createElement(\"div\", {\n        className: \"tab-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264\n        },\n        __self: this\n      }, this.state.userType == \"|Sales|\" && React.createElement(\"div\", {\n        className: \"tab-item active\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267\n        },\n        __self: this\n      }, React.createElement(Form, {\n        model: this.state.formModelSales,\n        handleSubmit: this.handleSubmit,\n        smallTitle: \"\",\n        showGoogleRecaptcha: \"false\",\n        buttonText: \"İlerle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268\n        },\n        __self: this\n      }))), this.state.userType == \"|XIPartner|XIVodafone|\" && React.createElement(\"div\", {\n        className: \"tab-item active\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274\n        },\n        __self: this\n      }, React.createElement(Form, {\n        model: this.state.formModelXI,\n        handleSubmit: this.handleSubmit,\n        smallTitle: \"\",\n        showGoogleRecaptcha: \"false\",\n        buttonText: \"İlerle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275\n        },\n        __self: this\n      }))), this.state.userType == \"|Standart|\" && React.createElement(\"div\", {\n        className: \"tab-item active\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281\n        },\n        __self: this\n      }, React.createElement(Form, {\n        model: this.state.formModelStandart,\n        handleSubmit: this.handleSubmit,\n        smallTitle: \"\",\n        showGoogleRecaptcha: \"false\",\n        buttonText: \"İlerle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"popup-bottom\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 284\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        href: \"javascript:void(0)\",\n        onClick: function onClick() {\n          return _this4.changeActivePopup('forgotPassword');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 285\n        },\n        __self: this\n      }, \"\\u015Eifremi Unuttum\"))))));\n    }\n  }]);\n\n  return LoginPopup;\n}(React.Component);\n\nfunction mapStateToProps(state) {\n  return {\n    app: state.app\n  };\n}\n\nexport default connect(mapStateToProps)(LoginPopup);","map":{"version":3,"sources":["/Users/mugeyakin/Projects/react/react-validation/src/layouts/popupcontents/LoginPopup.js"],"names":["React","connect","Form","login","dispatchItem","LoginPopup","props","state","userType","formModelStandart","email","value","name","type","label","placeholder","error","autofocus","valid","touched","validationRules","isRequired","password","formModelXI","formModelSales","changeActivePopup","bind","handleSubmit","changeUserType","accessTokenStored","localStorage","getItem","userTypeStored","removeItem","emailInputs","document","getElementsByName","length","focus","activePopup","dispatch","setState","data","setItem","role","indexOf","notification","message","isError","loginAccessToken","token","Component","mapStateToProps","app"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {connect} from 'react-redux';\nimport Form from '../../components/form/form';\nimport { login, dispatchItem } from '../../actions/actions';\n\nclass LoginPopup extends React.Component {\n    constructor(props){\n        super(props);\n\n        this.state = {\n            userType: '|Standart|',\n            formModelStandart: {\n                email: {\n                    value: '',\n                    name: 'email',\n                    type: 'text',\n                    label: 'E-posta Adresi',\n                    placeholder: 'E-posta adresiniz',\n                    error: 'Lütfen geçerli bir e-posta adresi girin.',\n                    autofocus:true,\n                    valid: false,\n                    touched: false,\n                    validationRules: {\n                        isRequired: true,\n                        email: true\n                    }\n                },\n                password: {\n                    value: '',\n                    name: 'password',\n                    type: 'password',\n                    label: 'Şifre',\n                    placeholder: 'Şifreniz',\n                    error: 'Lütfen şifrenizi girin.',\n                    valid: false,\n                    touched: false,\n                    validationRules: {\n                        isRequired: true\n                    }\n                }\n            },\n            formModelXI: {\n                email: {\n                    value: '',\n                    name: 'email',\n                    type: 'text',\n                    label: 'E-posta Adresi',\n                    placeholder: 'E-posta adresiniz',\n                    error: 'Lütfen geçerli bir e-posta adresi girin.',\n                    autofocus:true,\n                    valid: false,\n                    touched: false,\n                    validationRules: {\n                        isRequired: true,\n                        email: true\n                    }\n                },\n                password: {\n                    value: '',\n                    name: 'password',\n                    type: 'password',\n                    label: 'Şifre',\n                    placeholder: 'Şifreniz',\n                    error: 'Lütfen şifrenizi girin.',\n                    valid: false,\n                    touched: false,\n                    validationRules: {\n                        isRequired: true\n                    }\n                }\n            },\n            formModelSales: {\n                email: {\n                    value: '',\n                    name: 'email',\n                    type: 'text',\n                    label: 'Kullanıcı Adı',\n                    placeholder: 'Kullanıcı adınız',\n                    error: 'Lütfen kullanıcı adınızı girin.',\n                    autofocus:true,\n                    valid: false,\n                    touched: false,\n                    validationRules: {\n                        isRequired: true\n                    }\n                },\n                password: {\n                    value: '',\n                    name: 'password',\n                    type: 'password',\n                    label: 'Şifre',\n                    placeholder: 'Şifreniz',\n                    error: 'Lütfen şifrenizi girin.',\n                    valid: false,\n                    touched: false,\n                    validationRules: {\n                        isRequired: true\n                    }\n                }\n            }\n        }\n        \n        this.changeActivePopup = this.changeActivePopup.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.changeUserType =  this.changeUserType.bind(this);\n    }\n\n    componentDidMount()\n    {\n        var accessTokenStored = localStorage.getItem('user');\n        var userTypeStored = localStorage.getItem('userType');\n        if(accessTokenStored !== null && userTypeStored !== null)\n        {\n            this.changeActivePopup('');\n        }\n        else {\n            localStorage.removeItem('user');\n            localStorage.removeItem('userType');\n        }\n\n        var emailInputs = document.getElementsByName('email');\n        if(emailInputs.length > 0)\n        {\n            emailInputs[0].focus();\n        }\n    }\n    \n    changeActivePopup(activePopup) {\n        this.props.dispatch(dispatchItem('POPUP', activePopup));\n    }\n\n    changeUserType(type)\n    {\n        if(type == '|Standart|')\n        {\n            this.setState({\n                formModelSales: {\n                    ...this.state.formModelSales,\n                    email: {\n                        ...this.state.formModelSales.email,\n                        value: '',\n                        valid: false,\n                        touched: false\n                    },\n                    password: {\n                        ...this.state.formModelSales.password,\n                        value: '',\n                        valid: false,\n                        touched: false\n                    }\n                } \n            }, () => {\n                this.setState({\n                    userType: type\n                }, () => {\n                    var emailInputs = document.getElementsByName('email');\n                    if(emailInputs.length > 0)\n                    {\n                        emailInputs[0].focus();\n                    }\n                });\n            });\n        }\n        else if (type == '|Sales|') {\n            this.setState({\n                formModelStandart: {\n                    ...this.state.formModelStandart,\n                    email: {\n                        ...this.state.formModelStandart.email,\n                        value: '',\n                        valid: false,\n                        touched: false\n                    },\n                    password: {\n                        ...this.state.formModelStandart.password,\n                        value: '',\n                        valid: false,\n                        touched: false\n                    }\n                } \n            }, () => {\n                this.setState({\n                    userType: type\n                }, () => {\n                    var emailInputs = document.getElementsByName('email');\n                    if(emailInputs.length > 0)\n                    {\n                        emailInputs[0].focus();\n                    }\n                });\n            });\n        }\n        else {\n            this.setState({\n                formModelXI: {\n                    ...this.state.formModelXI,\n                    email: {\n                        ...this.state.formModelXI.email,\n                        value: '',\n                        valid: false,\n                        touched: false\n                    },\n                    password: {\n                        ...this.state.formModelXI.password,\n                        value: '',\n                        valid: false,\n                        touched: false\n                    }\n                } \n            }, () => {\n                this.setState({\n                    userType: type\n                }, () => {\n                    var emailInputs = document.getElementsByName('email');\n                    if(emailInputs.length > 0)\n                    {\n                        emailInputs[0].focus();\n                    }\n                });\n            });\n        }\n        \n    }\n\n    handleSubmit(data)\n    {\n        localStorage.setItem('userEmail', data.email);\n        this.props.dispatch(dispatchItem('USER_EMAIL', data.email));\n        \n        this.props.dispatch(login(data, (data) => {\n            var userType = data.role;\n            \n            if(this.state.userType.indexOf('|' + userType + '|') < 0)\n            {\n                var notification = {\n                    message: 'Yanlış alandan giriş yaptınız.',\n                    isError: true\n                }\n                this.props.dispatch(dispatchItem('NOTIFICATION', notification))\n            }\n            else {\n                var loginAccessToken = data.token;\n                this.props.dispatch(dispatchItem('LOGIN_ACCESS_TOKEN', loginAccessToken));\n\n                this.changeActivePopup('otpSms');\n            }\n        }, (data) => {\n        }));\n    }\n\n    render() {\n        return (\n            <div className=\"popup-container\">\n                <div className=\"popup-title\">\n                    One Messaging'e Giriş Yap\n                </div>\n\n                <div className=\"tabs\">\n                    <div className=\"tab-menu\">\n                        <a className={this.state.userType == \"|Standart|\" ? \"active\" :  \"\"} href=\"javascript:void(0)\" onClick={() => this.changeUserType('|Standart|')}>Kurumsal</a>\n                        <a className={this.state.userType == \"|Sales|\" ? \"active\" :  \"\"} href=\"javascript:void(0)\" onClick={() => this.changeUserType('|Sales|')}>Aktivasyon</a>\n                        <a className={this.state.userType == \"|XIPartner|XIVodafone|XIOtd\" ? \"active\" :  \"\"} href=\"javascript:void(0)\" onClick={() => this.changeUserType('|XIPartner|XIVodafone|')}>Pazarlama</a>\n                    </div>\n                    <div className=\"tab-container\">\n                        {this.state.userType == \"|Sales|\" &&\n                            <div className=\"tab-item active\">\n                                <div className=\"form-container\">\n                                    <Form model={this.state.formModelSales} handleSubmit={this.handleSubmit} smallTitle={\"\"} showGoogleRecaptcha={\"false\"} buttonText={\"İlerle\"} />\n                                </div>\n                            </div>\n                        }\n                        {this.state.userType == \"|XIPartner|XIVodafone|\" &&\n                            <div className=\"tab-item active\">\n                                <div className=\"form-container\">\n                                    <Form model={this.state.formModelXI} handleSubmit={this.handleSubmit} smallTitle={\"\"} showGoogleRecaptcha={\"false\"} buttonText={\"İlerle\"} />\n                                </div>\n                            </div>\n                        }\n                        {this.state.userType == \"|Standart|\" &&\n                            <div className=\"tab-item active\">\n                                <div className=\"form-container\">\n                                    <Form model={this.state.formModelStandart} handleSubmit={this.handleSubmit} smallTitle={\"\"} showGoogleRecaptcha={\"false\"} buttonText={\"İlerle\"} />\n                                </div>\n                                <div className=\"popup-bottom\">\n                                    <a href=\"javascript:void(0)\" onClick={() => this.changeActivePopup('forgotPassword')}>\n                                        Şifremi Unuttum\n                                    </a>\n                                </div>\n                            </div>\n                        }\n                    </div>\n                </div>\n            </div>\n        );\n        }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        app: state.app \n    }\n}\n\nexport default connect(mapStateToProps)(LoginPopup)"]},"metadata":{},"sourceType":"module"}