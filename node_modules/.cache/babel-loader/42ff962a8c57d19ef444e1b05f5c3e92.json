{"ast":null,"code":"import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\nexport default function configureStore() {\n  var enhancers = [applyMiddleware(thunk)];\n  var store = createStore(rootReducer, compose.apply(void 0, enhancers)); // For hot reloading reducers\n\n  if (module.hot) {\n    // Enable Webpack hot module replacement for reducers\n    module.hot.accept('./reducers', function () {\n      var nextReducer = require('./reducers').default; // eslint-disable-line global-require\n\n\n      store.replaceReducer(nextReducer);\n    });\n  }\n\n  return store;\n}","map":{"version":3,"sources":["C:\\Users\\taertan\\git\\onemessaging\\src\\actions\\store.js"],"names":["createStore","applyMiddleware","compose","thunk","rootReducer","configureStore","enhancers","store","module","hot","accept","nextReducer","require","default","replaceReducer"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,OAAvC,QAAsD,OAAtD;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,WAAP,MAAwB,YAAxB;AAEA,eAAe,SAASC,cAAT,GAA0B;AAErC,MAAMC,SAAS,GAAG,CACdL,eAAe,CAACE,KAAD,CADD,CAAlB;AAIA,MAAMI,KAAK,GAAGP,WAAW,CAACI,WAAD,EAAcF,OAAO,MAAP,SAAWI,SAAX,CAAd,CAAzB,CANqC,CAQrC;;AACA,MAAIE,MAAM,CAACC,GAAX,EAAgB;AACZ;AACAD,IAAAA,MAAM,CAACC,GAAP,CAAWC,MAAX,CAAkB,YAAlB,EAAgC,YAAM;AAClC,UAAMC,WAAW,GAAGC,OAAO,CAAC,YAAD,CAAP,CAAsBC,OAA1C,CADkC,CACiB;;;AACnDN,MAAAA,KAAK,CAACO,cAAN,CAAqBH,WAArB;AACH,KAHD;AAIH;;AAED,SAAOJ,KAAP;AACH","sourcesContent":["import { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\n\r\nexport default function configureStore() {\r\n\r\n    const enhancers = [\r\n        applyMiddleware(thunk)\r\n    ];\r\n\r\n    const store = createStore(rootReducer, compose(...enhancers));\r\n\r\n    // For hot reloading reducers\r\n    if (module.hot) {\r\n        // Enable Webpack hot module replacement for reducers\r\n        module.hot.accept('./reducers', () => {\r\n            const nextReducer = require('./reducers').default; // eslint-disable-line global-require\r\n            store.replaceReducer(nextReducer);\r\n        });\r\n    }\r\n\r\n    return store;\r\n}"]},"metadata":{},"sourceType":"module"}