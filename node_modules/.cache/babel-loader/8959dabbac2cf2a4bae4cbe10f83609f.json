{"ast":null,"code":"import _objectSpread from \"/Users/mugeyakin/Projects/react/react-validation/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { combineReducers } from 'redux';\nvar initialState = {\n  userEmail: '',\n  activePopup: '',\n  loginAccessToken: '',\n  accessToken: '',\n  userType: '',\n  loading: false,\n  notification: {\n    message: '',\n    isError: false\n  },\n  agent: {\n    companies: []\n  },\n  user: {\n    groups: [],\n    receivers: [],\n    receiverCount: 0,\n    blacklist: [],\n    blacklistCount: 0,\n    blackhour: {\n      startDate: '',\n      endDate: ''\n    },\n    report: []\n  },\n  xivodafone: {\n    config: null,\n    partners: [],\n    clients: [],\n    clientsCount: 0,\n    queries: [],\n    queriesCount: 0,\n    clientsForReport: [],\n    reportQuota: [],\n    reportQuotaCount: 0,\n    reportSend: [],\n    reportSendCount: 0,\n    partnerReportMonthly: [],\n    partnerReportMonthlyCount: 0,\n    partnerReportQuota: [],\n    partnerReportQuotaCount: 0,\n    partnerReportSend: [],\n    partnerReportSendCount: 0\n  },\n  originators: [],\n  partnerInfos: []\n};\n\nvar appReducer = function appReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'USER_EMAIL':\n      return _objectSpread({}, state, {\n        userEmail: action.data\n      });\n\n    case 'LOADING':\n      return _objectSpread({}, state, {\n        loading: action.data\n      });\n\n    case 'POPUP':\n      return _objectSpread({}, state, {\n        activePopup: action.data\n      });\n\n    case 'NOTIFICATION':\n      return _objectSpread({}, state, {\n        notification: action.data\n      });\n\n    case 'ACCESS_TOKEN':\n      return _objectSpread({}, state, {\n        accessToken: action.data.accessToken,\n        userType: action.data.userType\n      });\n\n    case 'LOGIN_ACCESS_TOKEN':\n      return _objectSpread({}, state, {\n        loginAccessToken: action.data\n      });\n\n    case 'USER_TYPE':\n      return _objectSpread({}, state, {\n        userType: action.data\n      });\n\n    case 'COMPANY_LIST':\n      return _objectSpread({}, state, {\n        agent: _objectSpread({}, state.agent, {\n          companies: action.data\n        })\n      });\n\n    case 'GROUP_LIST':\n      return _objectSpread({}, state, {\n        user: _objectSpread({}, state.user, {\n          groups: action.data\n        })\n      });\n\n    case 'RECEIVER_LIST':\n      return _objectSpread({}, state, {\n        user: _objectSpread({}, state.user, {\n          receivers: action.data\n        })\n      });\n\n    case 'RECEIVER_COUNT':\n      return _objectSpread({}, state, {\n        user: _objectSpread({}, state.user, {\n          receiverCount: action.data\n        })\n      });\n\n    case 'BLACKLIST':\n      return _objectSpread({}, state, {\n        user: _objectSpread({}, state.user, {\n          blacklist: action.data\n        })\n      });\n\n    case 'BLACKLIST_COUNT':\n      return _objectSpread({}, state, {\n        user: _objectSpread({}, state.user, {\n          blacklistCount: action.data\n        })\n      });\n\n    case 'BLACKHOUR':\n      return _objectSpread({}, state, {\n        user: _objectSpread({}, state.user, {\n          blackhour: {\n            startDate: action.data.startDate,\n            endDate: action.data.endDate\n          }\n        })\n      });\n\n    case 'ORIGINATORS':\n      return _objectSpread({}, state, {\n        originators: action.data\n      });\n\n    case 'PARTNERINFOS':\n      return _objectSpread({}, state, {\n        partnerInfos: action.data\n      });\n\n    case 'USER_REPORT':\n      return _objectSpread({}, state, {\n        user: _objectSpread({}, state.user, {\n          report: action.data\n        })\n      });\n\n    case 'CONFIG':\n      return _objectSpread({}, state, {\n        xivodafone: _objectSpread({}, state.xivodafone, {\n          config: action.data\n        })\n      });\n\n    case 'PARTNER_LIST':\n      return _objectSpread({}, state, {\n        xivodafone: _objectSpread({}, state.xivodafone, {\n          partners: action.data\n        })\n      });\n\n    case 'CLIENT_LIST':\n      return _objectSpread({}, state, {\n        xivodafone: _objectSpread({}, state.xivodafone, {\n          clients: action.data\n        })\n      });\n\n    case 'CLIENT_COUNT':\n      return _objectSpread({}, state, {\n        xivodafone: _objectSpread({}, state.xivodafone, {\n          clientsCount: action.data\n        })\n      });\n\n    case 'QUERY_LIST':\n      return _objectSpread({}, state, {\n        xivodafone: _objectSpread({}, state.xivodafone, {\n          queries: action.data\n        })\n      });\n\n    case 'QUERY_COUNT':\n      return _objectSpread({}, state, {\n        xivodafone: _objectSpread({}, state.xivodafone, {\n          queriesCount: action.data\n        })\n      });\n\n    case 'XIVODAFONE_CLIENT_LIST_FOR_REPORT':\n      return _objectSpread({}, state, {\n        xivodafone: _objectSpread({}, state.xivodafone, {\n          clientsForReport: action.data\n        })\n      });\n\n    case 'XIVODAFONE_REPORT_QUOTA':\n      return _objectSpread({}, state, {\n        xivodafone: _objectSpread({}, state.xivodafone, {\n          reportQuota: action.data\n        })\n      });\n\n    case 'XIVODAFONE_REPORT_QUOTA_COUNT':\n      return _objectSpread({}, state, {\n        xivodafone: _objectSpread({}, state.xivodafone, {\n          reportQuotaCount: action.data\n        })\n      });\n\n    case 'XIVODAFONE_REPORT_SEND':\n      return _objectSpread({}, state, {\n        xivodafone: _objectSpread({}, state.xivodafone, {\n          reportSend: action.data\n        })\n      });\n\n    case 'XIVODAFONE_REPORT_SEND_COUNT':\n      return _objectSpread({}, state, {\n        xivodafone: _objectSpread({}, state.xivodafone, {\n          reportSendCount: action.data\n        })\n      });\n\n    case 'XIVODAFONE_PARTNERREPORT_MONTHLY':\n      return _objectSpread({}, state, {\n        xivodafone: _objectSpread({}, state.xivodafone, {\n          partnerReportMonthly: action.data\n        })\n      });\n\n    case 'XIVODAFONE_PARTNERREPORT_MONTHLY_COUNT':\n      return _objectSpread({}, state, {\n        xivodafone: _objectSpread({}, state.xivodafone, {\n          partnerReportMonthlyCount: action.data\n        })\n      });\n\n    case 'XIVODAFONE_PARTNERREPORT_QUOTA':\n      return _objectSpread({}, state, {\n        xivodafone: _objectSpread({}, state.xivodafone, {\n          partnerReportQuota: action.data\n        })\n      });\n\n    case 'XIVODAFONE_PARTNERREPORT_QUOTA_COUNT':\n      return _objectSpread({}, state, {\n        xivodafone: _objectSpread({}, state.xivodafone, {\n          partnerReportQuotaCount: action.data\n        })\n      });\n\n    case 'XIVODAFONE_PARTNERREPORT_SEND':\n      return _objectSpread({}, state, {\n        xivodafone: _objectSpread({}, state.xivodafone, {\n          partnerReportSend: action.data\n        })\n      });\n\n    case 'XIVODAFONE_PARTNERREPORT_SEND_COUNT':\n      return _objectSpread({}, state, {\n        xivodafone: _objectSpread({}, state.xivodafone, {\n          partnerReportSendCount: action.data\n        })\n      });\n\n    case 'REMOVE_ALL':\n      state = initialState;\n      return _objectSpread({}, state);\n\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  app: appReducer\n});","map":{"version":3,"sources":["/Users/mugeyakin/Projects/react/react-validation/src/actions/reducers.js"],"names":["combineReducers","initialState","userEmail","activePopup","loginAccessToken","accessToken","userType","loading","notification","message","isError","agent","companies","user","groups","receivers","receiverCount","blacklist","blacklistCount","blackhour","startDate","endDate","report","xivodafone","config","partners","clients","clientsCount","queries","queriesCount","clientsForReport","reportQuota","reportQuotaCount","reportSend","reportSendCount","partnerReportMonthly","partnerReportMonthlyCount","partnerReportQuota","partnerReportQuotaCount","partnerReportSend","partnerReportSendCount","originators","partnerInfos","appReducer","state","action","type","data","app"],"mappings":"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","sourcesContent":["import {combineReducers} from 'redux';\n\nconst initialState = {\n    userEmail:'',\n    activePopup: '',\n    loginAccessToken: '',\n    accessToken: '',\n    userType: '',\n    loading: false,\n    notification: {\n        message: '',\n        isError: false\n    },\n    agent: {\n        companies: []\n    },\n    user: {\n        groups: [],\n        receivers: [],\n        receiverCount: 0,\n        blacklist: [],\n        blacklistCount: 0,\n        blackhour: {\n            startDate: '',\n            endDate: ''\n        },\n        report: []\n    },\n    xivodafone: {\n        config: null,\n        partners: [],\n        clients: [],\n        clientsCount: 0,\n        queries: [],\n        queriesCount: 0,\n        clientsForReport: [],\n        reportQuota: [],\n        reportQuotaCount:0,\n        reportSend: [],\n        reportSendCount:0,\n        partnerReportMonthly: [],\n        partnerReportMonthlyCount: 0,\n        partnerReportQuota: [],\n        partnerReportQuotaCount: 0,\n        partnerReportSend: [],\n        partnerReportSendCount: 0\n    },\n    originators: [],\n    partnerInfos: []\n};\n\nconst appReducer = (state = initialState, action) => {\n    switch(action.type) {\n        case 'USER_EMAIL':\n            return {\n                ...state,\n                userEmail: action.data\n            }\n        case 'LOADING':\n            return {\n                ...state,\n                loading: action.data\n            }\n        case 'POPUP':\n            return {\n                ...state,\n                activePopup: action.data\n            }\n        case 'NOTIFICATION':\n            return {\n                ...state,\n                notification: action.data\n            }\n        case 'ACCESS_TOKEN':\n            return {\n                ...state,\n                accessToken: action.data.accessToken,\n                userType: action.data.userType\n            }\n        case 'LOGIN_ACCESS_TOKEN':\n            return {\n                ...state,\n                loginAccessToken: action.data\n            }\n        case 'USER_TYPE':\n                return {\n                    ...state,\n                    userType: action.data\n                }            \n        case 'COMPANY_LIST':\n            return {\n                ...state,\n                agent: {\n                    ...state.agent,\n                    companies: action.data\n                }\n            }\n        case 'GROUP_LIST':\n            return {\n                ...state,\n                user: {\n                    ...state.user,\n                    groups: action.data\n                }\n            }\n        case 'RECEIVER_LIST':\n            return {\n                ...state,\n                user: {\n                    ...state.user,\n                    receivers: action.data\n                }\n            }\n        case 'RECEIVER_COUNT':\n            return {\n                ...state,\n                user: {\n                    ...state.user,\n                    receiverCount: action.data\n                }\n            }\n        case 'BLACKLIST':\n            return {\n                ...state,\n                user: {\n                    ...state.user,\n                    blacklist: action.data\n                }\n            }\n        case 'BLACKLIST_COUNT':\n            return {\n                ...state,\n                user: {\n                    ...state.user,\n                    blacklistCount: action.data\n                }\n            }\n        case 'BLACKHOUR':\n            return {\n                ...state,\n                user: {\n                    ...state.user,\n                    blackhour: {\n                        startDate: action.data.startDate,\n                        endDate: action.data.endDate\n                    }\n                }\n            }\n        case 'ORIGINATORS':\n            return {\n                ...state,\n                originators: action.data\n            }\n        case 'PARTNERINFOS':\n            return {\n                ...state,\n                partnerInfos: action.data\n            }\n        case 'USER_REPORT':\n            return {\n                ...state,\n                user: {\n                    ...state.user,\n                    report: action.data\n                }\n            }\n        case 'CONFIG':\n            return {\n                ...state,\n                xivodafone: {\n                    ...state.xivodafone,\n                    config: action.data\n                }\n            }\n        case 'PARTNER_LIST':\n            return {\n                ...state,\n                xivodafone: {\n                    ...state.xivodafone,\n                    partners: action.data\n                }\n            }\n        case 'CLIENT_LIST':\n            return {\n                ...state,\n                xivodafone: {\n                    ...state.xivodafone,\n                    clients: action.data\n                }\n            }\n        case 'CLIENT_COUNT':\n            return {\n                ...state,\n                xivodafone: {\n                    ...state.xivodafone,\n                    clientsCount: action.data\n                }\n            }\n        case 'QUERY_LIST':\n            return {\n                ...state,\n                xivodafone: {\n                    ...state.xivodafone,\n                    queries: action.data\n                }\n            }\n        case 'QUERY_COUNT':\n            return {\n                ...state,\n                xivodafone: {\n                    ...state.xivodafone,\n                    queriesCount: action.data\n                }\n            }\n        case 'XIVODAFONE_CLIENT_LIST_FOR_REPORT':\n            return {\n                ...state,\n                xivodafone: {\n                    ...state.xivodafone,\n                    clientsForReport: action.data\n                }\n            }\n        case 'XIVODAFONE_REPORT_QUOTA':\n            return {\n                ...state,\n                xivodafone: {\n                    ...state.xivodafone,\n                    reportQuota: action.data\n                }\n            }\n        case 'XIVODAFONE_REPORT_QUOTA_COUNT':\n            return {\n                ...state,\n                xivodafone: {\n                    ...state.xivodafone,\n                    reportQuotaCount: action.data\n                }\n            }\n        case 'XIVODAFONE_REPORT_SEND':\n            return {\n                ...state,\n                xivodafone: {\n                    ...state.xivodafone,\n                    reportSend: action.data\n                }\n            }\n        case 'XIVODAFONE_REPORT_SEND_COUNT':\n            return {\n                ...state,\n                xivodafone: {\n                    ...state.xivodafone,\n                    reportSendCount: action.data\n                }\n            }\n        case 'XIVODAFONE_PARTNERREPORT_MONTHLY':\n            return {\n                ...state,\n                xivodafone: {\n                    ...state.xivodafone,\n                    partnerReportMonthly: action.data\n                }\n            }\n        case 'XIVODAFONE_PARTNERREPORT_MONTHLY_COUNT':\n            return {\n                ...state,\n                xivodafone: {\n                    ...state.xivodafone,\n                    partnerReportMonthlyCount: action.data\n                }\n            }\n        case 'XIVODAFONE_PARTNERREPORT_QUOTA':\n            return {\n                ...state,\n                xivodafone: {\n                    ...state.xivodafone,\n                    partnerReportQuota: action.data\n                }\n            }\n        case 'XIVODAFONE_PARTNERREPORT_QUOTA_COUNT':\n            return {\n                ...state,\n                xivodafone: {\n                    ...state.xivodafone,\n                    partnerReportQuotaCount: action.data\n                }\n            }\n        case 'XIVODAFONE_PARTNERREPORT_SEND':\n            return {\n                ...state,\n                xivodafone: {\n                    ...state.xivodafone,\n                    partnerReportSend: action.data\n                }\n            }\n        case 'XIVODAFONE_PARTNERREPORT_SEND_COUNT':\n            return {\n                ...state,\n                xivodafone: {\n                    ...state.xivodafone,\n                    partnerReportSendCount: action.data\n                }\n            }\n        case 'REMOVE_ALL':\n            state = initialState;\n            return {\n                ...state\n            }\n        default:\n            return state\n    }\n}\n\nexport default combineReducers({\n    app: appReducer\n})"]},"metadata":{},"sourceType":"module"}