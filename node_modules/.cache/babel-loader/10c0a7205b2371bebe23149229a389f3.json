{"ast":null,"code":"import _defineProperty from \"/Users/mugeyakin/Projects/react/react-validation/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/mugeyakin/Projects/react/react-validation/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/mugeyakin/Projects/react/react-validation/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/mugeyakin/Projects/react/react-validation/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/mugeyakin/Projects/react/react-validation/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/mugeyakin/Projects/react/react-validation/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/Users/mugeyakin/Projects/react/react-validation/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/mugeyakin/Projects/react/react-validation/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/mugeyakin/Projects/react/react-validation/src/components/form/form.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport moment, { isDate } from 'moment';\nimport ReCAPTCHA from \"react-google-recaptcha\";\nimport FormItem from './formitem';\nimport Button from './button';\nimport { validateFormModel, handleInputChange, scrollToItem } from '../../actions/utils';\n\nvar Form =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Form, _React$Component);\n\n  function Form(props) {\n    var _this;\n\n    _classCallCheck(this, Form);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Form).call(this, props));\n    _this.state = {\n      loadingActive: false,\n      formModel: _this.props.model,\n      recaptchaToken: ''\n    };\n    _this.addItem = _this.addItem.bind(_assertThisInitialized(_this));\n    _this.removeItem = _this.removeItem.bind(_assertThisInitialized(_this));\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_this));\n    _this.handleRecaptchaChange = _this.handleRecaptchaChange.bind(_assertThisInitialized(_this));\n    _this.handleButtonClick = _this.handleButtonClick.bind(_assertThisInitialized(_this));\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Form, [{\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      if (this.props.model !== nextProps.model) {\n        this.setState({\n          formModel: nextProps.model\n        });\n      }\n    }\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(e, index, dropdownCount, getCheckedValue, name, isDatepicker) {\n      var _this2 = this;\n\n      if (e && e.target && e.target.files) {\n        var value = '';\n\n        if (e.target.files.length > 0) {\n          value = e.target.files[0];\n        }\n\n        var valuePlaceholder = e.target.value;\n        var updatedFormModel = handleInputChange(value, e.target.name, this.state.formModel, index, valuePlaceholder, dropdownCount);\n        this.setState({\n          formModel: updatedFormModel\n        });\n      } else {\n        var value = '';\n\n        if (e && e.target) {\n          name = e.target.name;\n          value = e.target.value;\n\n          if (getCheckedValue) {\n            value = e.target.checked;\n          }\n        } else {\n          if (e && isDatepicker) {\n            value = moment(e).format('DD.MM.YYYY');\n          } else {\n            value = e;\n          }\n        }\n\n        var updatedFormModel = handleInputChange(value, name, this.state.formModel, index, valuePlaceholder, dropdownCount);\n        this.setState({\n          formModel: updatedFormModel\n        }, function () {\n          if (_this2.props.onInputChange) {\n            _this2.props.onInputChange(_this2.state.formModel, name);\n          }\n        });\n      }\n    }\n  }, {\n    key: \"handleRecaptchaChange\",\n    value: function handleRecaptchaChange(value) {\n      this.setState({\n        recaptchaToken: value\n      });\n    }\n  }, {\n    key: \"handleButtonClick\",\n    value: function handleButtonClick(isSecondButton) {\n      this.handleSubmit(isSecondButton);\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit(isSecondButton) {\n      if (!this.state.loadingActive) {\n        var updatedFormModel = validateFormModel(this.state.formModel, true);\n        this.setState({\n          formModel: updatedFormModel\n        });\n        var isValid = true;\n        var firstInvalidItem = null;\n        Object.keys(updatedFormModel).map(function (key) {\n          var formModelItemToCheck = updatedFormModel[key];\n\n          if (Array.isArray(formModelItemToCheck)) {\n            for (var i = 0; i < formModelItemToCheck.length; i++) {\n              if (firstInvalidItem == null && !formModelItemToCheck[i].valid) {\n                firstInvalidItem = formModelItemToCheck[i];\n              }\n\n              isValid = isValid && formModelItemToCheck[i].valid;\n            }\n          } else {\n            if (firstInvalidItem == null && !formModelItemToCheck.valid) {\n              firstInvalidItem = formModelItemToCheck;\n            }\n\n            isValid = isValid && formModelItemToCheck.valid;\n          }\n        });\n\n        if (isValid) {\n          this.setState({\n            loadingActive: true\n          });\n          var data = {};\n          var formModel = this.state.formModel;\n          Object.keys(formModel).map(function (key) {\n            var formModelItemToGetValue = formModel[key];\n\n            if (Array.isArray(formModelItemToGetValue)) {\n              var values = [];\n\n              for (var i = 0; i < formModelItemToGetValue.length; i++) {\n                var value = formModelItemToGetValue[i].value;\n\n                if (formModelItemToGetValue.type == \"textdate\" || formModelItemToGetValue.type == \"datepicker\") {\n                  var dateValues = value.split('.');\n\n                  if (dateValues.length == 3) {\n                    value = dateValues[0] + dateValues[1] + dateValues[2];\n                  }\n                }\n\n                values.push(value);\n              }\n\n              data[key] = values;\n            } else {\n              var value = formModel[key].value;\n\n              if (formModelItemToGetValue.type == \"textdate\" || formModelItemToGetValue.type == \"datepicker\") {\n                var dateValues = value.split('.');\n\n                if (dateValues.length == 3) {\n                  value = dateValues[0] + dateValues[1] + dateValues[2];\n                }\n              }\n\n              data[key] = value;\n            }\n          });\n          this.setState({\n            loadingActive: false\n          });\n\n          if (this.state.recaptchaToken != \"\") {\n            data.recaptchaToken = this.state.recaptchaToken;\n          }\n\n          this.props.handleSubmit(data, isSecondButton);\n        } else {\n          scrollToItem(firstInvalidItem.name);\n        }\n      }\n    }\n  }, {\n    key: \"addItem\",\n    value: function addItem(key) {\n      var items = this.state.formModel[key];\n\n      if (items.length > 0) {\n        var baseItem = JSON.parse(JSON.stringify(items[0]));\n        baseItem.value = \"\";\n        items.push(baseItem);\n        this.setState({\n          formModel: _objectSpread({}, this.state.formModel, _defineProperty({}, key, items))\n        });\n      }\n    }\n  }, {\n    key: \"removeItem\",\n    value: function removeItem(index, key) {\n      var items = this.state.formModel[key];\n\n      if (items.length >= index) {\n        items.splice(index, 1);\n        this.setState({\n          formModel: _objectSpread({}, this.state.formModel, _defineProperty({}, key, items))\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var formModel = this.state.formModel;\n      var formItems = [];\n\n      if (formModel) {\n        Object.keys(formModel).map(function (key) {\n          formItems.push(formModel[key]);\n        });\n      }\n\n      var isMultipleColumn = this.props.multipleColumn ? this.props.multipleColumn : false;\n      return React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        id: this.props.formId ? this.props.formId : \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      }, this.props.smallTitle && React.createElement(\"div\", {\n        className: \"title-default small\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235\n        },\n        __self: this\n      }, this.props.smallTitle)), isMultipleColumn && [React.createElement(\"div\", {\n        className: \"column\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240\n        },\n        __self: this\n      }, formItems && formItems.map(function (item, i) {\n        if (i % 2 == 0) {\n          if (Array.isArray(item)) {\n            return [item.map(function (subItem, j) {\n              return React.createElement(FormItem, {\n                item: subItem,\n                index: j,\n                handleChange: _this3.handleChange,\n                removeItem: _this3.removeItem,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 252\n                },\n                __self: this\n              });\n            }), React.createElement(\"a\", {\n              className: \"form-btn-add\",\n              href: \"javascript:void(0)\",\n              onClick: function onClick() {\n                return _this3.addItem(item.length > 0 ? item[0].name : \"\");\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 256\n              },\n              __self: this\n            }, item.length > 0 ? item[0].addText : \"\")];\n          } else {\n            return React.createElement(FormItem, {\n              item: item,\n              handleChange: _this3.handleChange,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 262\n              },\n              __self: this\n            });\n          }\n        }\n      })), React.createElement(\"div\", {\n        className: \"column\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269\n        },\n        __self: this\n      }, formItems && formItems.map(function (item, i) {\n        if (i % 2 == 1) {\n          if (Array.isArray(item)) {\n            return [item.map(function (subItem, j) {\n              return React.createElement(FormItem, {\n                item: subItem,\n                index: j,\n                handleChange: _this3.handleChange,\n                removeItem: _this3.removeItem,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 281\n                },\n                __self: this\n              });\n            }), React.createElement(\"a\", {\n              className: \"form-btn-add\",\n              href: \"javascript:void(0)\",\n              onClick: function onClick() {\n                return _this3.addItem(item.length > 0 ? item[0].name : \"\");\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 285\n              },\n              __self: this\n            }, item.length > 0 ? item[0].addText : \"\")];\n          } else {\n            return React.createElement(FormItem, {\n              item: item,\n              handleChange: _this3.handleChange,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 291\n              },\n              __self: this\n            });\n          }\n        }\n      }))], !isMultipleColumn && formItems && formItems.map(function (item, i) {\n        if (Array.isArray(item)) {\n          return [item.map(function (subItem, j) {\n            return React.createElement(FormItem, {\n              item: subItem,\n              index: j,\n              handleChange: _this3.handleChange,\n              removeItem: _this3.removeItem,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 309\n              },\n              __self: this\n            });\n          }), React.createElement(\"a\", {\n            className: \"form-btn-add\",\n            href: \"javascript:void(0)\",\n            onClick: function onClick() {\n              return _this3.addItem(item.length > 0 ? item[0].name : \"\");\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 312\n            },\n            __self: this\n          }, item.length > 0 ? item[0].addText : \"\")];\n        } else {\n          return React.createElement(FormItem, {\n            item: item,\n            handleChange: _this3.handleChange,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 318\n            },\n            __self: this\n          });\n        }\n      }), this.props.showGoogleRecaptcha && this.props.showGoogleRecaptcha == \"true\" && React.createElement(\"div\", {\n        className: \"form-item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 324\n        },\n        __self: this\n      }, React.createElement(ReCAPTCHA, {\n        sitekey: process.env.REACT_APP_RECAPTCHA_SITEKEY,\n        onChange: this.handleRecaptchaChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 325\n        },\n        __self: this\n      })), React.createElement(Button, {\n        disabled: this.state.loadingActive,\n        extraClass: this.props.buttonExtraClass ? this.props.buttonExtraClass : \"primary\",\n        onClick: function onClick() {\n          return _this3.handleButtonClick(false);\n        },\n        text: this.props.buttonText,\n        id: this.props.buttonId,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 331\n        },\n        __self: this\n      }), this.props.secondButtonText && React.createElement(Button, {\n        disabled: false,\n        extraClass: this.props.secondButtonExtraClass ? this.props.secondButtonExtraClass : \"\",\n        onClick: function onClick() {\n          return _this3.handleButtonClick(true);\n        },\n        text: this.props.secondButtonText,\n        id: this.props.secondButtonId,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 333\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Form;\n}(React.Component);\n\nfunction mapStateToProps(state) {\n  return {\n    app: state.app\n  };\n}\n\nexport default connect(mapStateToProps)(Form);","map":{"version":3,"sources":["/Users/mugeyakin/Projects/react/react-validation/src/components/form/form.js"],"names":["React","connect","moment","isDate","ReCAPTCHA","FormItem","Button","validateFormModel","handleInputChange","scrollToItem","Form","props","state","loadingActive","formModel","model","recaptchaToken","addItem","bind","removeItem","handleChange","handleRecaptchaChange","handleButtonClick","handleSubmit","nextProps","setState","e","index","dropdownCount","getCheckedValue","name","isDatepicker","target","files","value","length","valuePlaceholder","updatedFormModel","checked","format","onInputChange","isSecondButton","isValid","firstInvalidItem","Object","keys","map","key","formModelItemToCheck","Array","isArray","i","valid","data","formModelItemToGetValue","values","type","dateValues","split","push","items","baseItem","JSON","parse","stringify","splice","formItems","isMultipleColumn","multipleColumn","formId","smallTitle","item","subItem","j","addText","showGoogleRecaptcha","process","env","REACT_APP_RECAPTCHA_SITEKEY","buttonExtraClass","buttonText","buttonId","secondButtonText","secondButtonExtraClass","secondButtonId","Component","mapStateToProps","app"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {connect} from 'react-redux';\nimport moment, { isDate } from 'moment';\nimport ReCAPTCHA from \"react-google-recaptcha\";\nimport FormItem from './formitem';\nimport Button from './button';\nimport { validateFormModel, handleInputChange, scrollToItem } from '../../actions/utils'\n\nclass Form extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loadingActive: false,\n      formModel: this.props.model,\n      recaptchaToken: ''\n    }\n\n    this.addItem = this.addItem.bind(this);\n    this.removeItem = this.removeItem.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleRecaptchaChange = this.handleRecaptchaChange.bind(this);\n    this.handleButtonClick = this.handleButtonClick.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentWillReceiveProps(nextProps)\n    {\n        if(this.props.model !== nextProps.model) {\n            this.setState({\n                formModel: nextProps.model\n            });\n        }\n    }\n\n  handleChange(e, index, dropdownCount, getCheckedValue, name, isDatepicker) {\n    if(e && e.target && e.target.files)\n    {\n      var value = '';\n      if(e.target.files.length > 0)\n      {\n        value = e.target.files[0];\n      }\n      \n      var valuePlaceholder = e.target.value;\n      \n      var updatedFormModel = handleInputChange(value, e.target.name, this.state.formModel, index, valuePlaceholder, dropdownCount);\n      this.setState({\n          formModel: updatedFormModel\n      });\n    }\n    else {\n      var value = '';\n      if(e && e.target)\n      {\n        name = e.target.name;\n        value = e.target.value;\n\n        if(getCheckedValue)\n        {\n          value = e.target.checked;\n        }\n      }\n      else {\n        if(e && isDatepicker)\n        {\n          value = moment(e).format('DD.MM.YYYY');\n        }\n        else {\n          value = e;\n        }\n      }\n      \n      var updatedFormModel = handleInputChange(value, name, this.state.formModel, index, valuePlaceholder, dropdownCount);\n      this.setState({\n          formModel: updatedFormModel\n      }, () => {\n        if(this.props.onInputChange){\n          this.props.onInputChange(this.state.formModel, name);\n        }\n      });\n    }\n  }\n\n  handleRecaptchaChange(value) {\n    this.setState({\n      recaptchaToken: value\n    });\n  }\n\n  handleButtonClick(isSecondButton) {\n    this.handleSubmit(isSecondButton);\n  }\n\n  handleSubmit(isSecondButton)\n  {\n    if(!this.state.loadingActive)\n    {\n      var updatedFormModel = validateFormModel(this.state.formModel, true);\n      this.setState({\n          formModel: updatedFormModel\n      });\n      var isValid = true;\n      var firstInvalidItem = null;\n\n      Object.keys(updatedFormModel).map(function(key) {\n          var formModelItemToCheck = updatedFormModel[key];\n          if(Array.isArray(formModelItemToCheck))\n          {\n              for(var i = 0; i < formModelItemToCheck.length; i++)\n              {\n                  if(firstInvalidItem == null && !formModelItemToCheck[i].valid)\n                  {\n                    firstInvalidItem = formModelItemToCheck[i];\n                  }\n                  isValid = isValid && formModelItemToCheck[i].valid;\n              }\n          }\n          else {\n              if(firstInvalidItem == null && !formModelItemToCheck.valid)\n              {\n                firstInvalidItem = formModelItemToCheck;\n              }\n              isValid = isValid && formModelItemToCheck.valid;\n          }\n      });\n\n      if(isValid)\n      {\n        this.setState({\n            loadingActive: true\n        });\n        \n        var data = {};\n        \n        var formModel = this.state.formModel;\n        Object.keys(formModel).map(function(key) {\n            var formModelItemToGetValue = formModel[key];\n            if(Array.isArray(formModelItemToGetValue))\n            {\n              var values = [];\n              for(var i = 0; i < formModelItemToGetValue.length; i++)\n              {\n                var value = formModelItemToGetValue[i].value;\n                if(formModelItemToGetValue.type == \"textdate\" || formModelItemToGetValue.type == \"datepicker\")\n                {\n                  var dateValues = value.split('.');\n                  if(dateValues.length == 3)\n                  {\n                    value = dateValues[0] + dateValues[1] + dateValues[2];\n                  }\n                }\n                values.push(value);\n              }\n              data[key] = values;\n            }\n            else {\n              var value = formModel[key].value;\n              if(formModelItemToGetValue.type == \"textdate\" || formModelItemToGetValue.type == \"datepicker\")\n              {\n                var dateValues = value.split('.');\n                if(dateValues.length == 3)\n                {\n                  value = dateValues[0] + dateValues[1] + dateValues[2];\n                }\n              }\n              data[key] = value;\n            }\n        });\n        \n        this.setState({\n          loadingActive: false\n        });\n\n        if(this.state.recaptchaToken != \"\")\n        {\n          data.recaptchaToken = this.state.recaptchaToken;\n        }\n\n        this.props.handleSubmit(data, isSecondButton);\n      }\n      else {\n        scrollToItem(firstInvalidItem.name);\n      }\n    }\n  }\n\n  addItem(key){\n    var items = this.state.formModel[key];\n    if(items.length > 0)\n    {\n      var baseItem = JSON.parse(JSON.stringify(items[0]));\n      baseItem.value = \"\";\n      items.push(baseItem);\n\n      this.setState({\n          formModel:{\n              ...this.state.formModel,\n              [key]: items\n          }\n      });\n    }\n  }\n\n  removeItem(index, key) {\n    var items = this.state.formModel[key];\n    if(items.length >= index)\n    {\n      items.splice(index, 1);\n      \n      this.setState({\n          formModel:{\n              ...this.state.formModel,\n              [key]: items\n          }\n      });\n    } \n  }\n\n  render() {\n    var formModel = this.state.formModel;\n    var formItems = [];\n    if(formModel)\n    {\n      Object.keys(formModel).map(function(key) {\n        formItems.push(formModel[key]);\n      });\n    }\n\n    var isMultipleColumn = (this.props.multipleColumn ? this.props.multipleColumn : false);\n\n    return (\n      <form onSubmit = {this.handleSubmit} id={this.props.formId ? this.props.formId : \"\"}>\n        {this.props.smallTitle &&\n          <div className=\"title-default small\">\n              <span>{this.props.smallTitle}</span>\n          </div>\n        }\n        {isMultipleColumn &&\n          [\n          <div className=\"column\">\n            {formItems && formItems.map((item, i) => \n            {\n              if(i % 2 == 0)\n              { \n                if(Array.isArray(item))\n                {\n                  return (\n                    [\n                    item.map((subItem, j) => \n                      {\n                        return (\n                          <FormItem item={subItem} index={j} handleChange={this.handleChange} removeItem={this.removeItem} />\n                        )\n                      }\n                    ),\n                    <a className=\"form-btn-add\" href=\"javascript:void(0)\" onClick={() => this.addItem(item.length > 0 ? item[0].name : \"\")}>{(item.length > 0 ? item[0].addText : \"\")}</a>\n                    ]\n                  )\n                }\n                else {\n                  return (\n                    <FormItem item={item} handleChange={this.handleChange} />\n                  )\n                }\n              }\n            })\n          }\n          </div>,\n          <div className=\"column\">\n            {formItems && formItems.map((item, i) => \n            {\n              if(i % 2 == 1)\n              {  \n                if(Array.isArray(item))\n                {\n                  return (\n                    [\n                    item.map((subItem, j) => \n                      {\n                        return (\n                          <FormItem item={subItem} index={j} handleChange={this.handleChange} removeItem={this.removeItem} />\n                        )\n                      }\n                    ),\n                    <a className=\"form-btn-add\" href=\"javascript:void(0)\" onClick={() => this.addItem(item.length > 0 ? item[0].name : \"\")}>{(item.length > 0 ? item[0].addText : \"\")}</a>\n                    ]\n                  )\n                }\n                else{\n                  return (\n                    <FormItem item={item} handleChange={this.handleChange} />\n                  )\n                }\n              }\n            })\n            }\n          </div>\n          ]\n        }\n        {!isMultipleColumn && formItems && formItems.map((item, i) => \n          {\n            if(Array.isArray(item))\n            {\n              return(\n                [  \n                  item.map((subItem, j) => \n                  {\n                    return (\n                      <FormItem item={subItem} index={j} handleChange={this.handleChange} removeItem={this.removeItem} />\n                    ) \n                  }),\n                  <a className=\"form-btn-add\" href=\"javascript:void(0)\" onClick={() => this.addItem(item.length > 0 ? item[0].name : \"\")}>{(item.length > 0 ? item[0].addText : \"\")}</a>\n                ]\n              )\n            }\n            else {\n              return (\n                <FormItem item={item} handleChange={this.handleChange} />\n              )\n            }\n          }\n        )}\n        {this.props.showGoogleRecaptcha && this.props.showGoogleRecaptcha == \"true\" &&\n          <div className=\"form-item\">  \n            <ReCAPTCHA\n              sitekey={process.env.REACT_APP_RECAPTCHA_SITEKEY}\n              onChange={this.handleRecaptchaChange}\n            />\n          </div>\n        }\n        <Button disabled={this.state.loadingActive} extraClass={this.props.buttonExtraClass ? this.props.buttonExtraClass : \"primary\"} onClick={() => this.handleButtonClick(false)} text={this.props.buttonText} id={this.props.buttonId} />\n        {this.props.secondButtonText &&\n          <Button disabled={false} extraClass={this.props.secondButtonExtraClass ? this.props.secondButtonExtraClass : \"\"} onClick={() => this.handleButtonClick(true)} text={this.props.secondButtonText} id={this.props.secondButtonId} />\n        }\n      </form>\n    );\n  }\n}\n  \nfunction mapStateToProps(state) {\n  return {\n      app: state.app \n  }\n}\n\nexport default connect(mapStateToProps)(Form)"]},"metadata":{},"sourceType":"module"}