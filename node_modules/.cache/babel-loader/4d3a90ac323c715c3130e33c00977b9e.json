{"ast":null,"code":"import _objectSpread from \"/Users/mugeyakin/Projects/react/react-validation/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/mugeyakin/Projects/react/react-validation/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/mugeyakin/Projects/react/react-validation/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/mugeyakin/Projects/react/react-validation/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/mugeyakin/Projects/react/react-validation/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/Users/mugeyakin/Projects/react/react-validation/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/mugeyakin/Projects/react/react-validation/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/mugeyakin/Projects/react/react-validation/src/pages/XIVodafone/PartnerReport/list.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { BrowserRouter as Router, Link } from \"react-router-dom\";\nimport moment from 'moment';\nimport Paging from '../../../components/paging/index';\nimport Form from '../../../components/form/form';\nimport Message from '../../../components/message/index';\nimport { xiVodafoneReportClientList, partners, xiVodafonePartnerReportMonthly, xiVodafonePartnerReportQuota, xiVodafonePartnerReportSend, xiVodafonePartnerReportSendDownload, dispatchItem } from '../../../actions/actions';\n\nvar PartnerReport =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(PartnerReport, _React$Component);\n\n  function PartnerReport(props) {\n    var _this;\n\n    _classCallCheck(this, PartnerReport);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(PartnerReport).call(this, props));\n    var yearOptions = [{\n      name: \"2020\",\n      value: \"2020\"\n    }, {\n      name: \"2019\",\n      value: \"2019\"\n    }, {\n      name: \"2018\",\n      value: \"2018\"\n    }];\n    var monthOptions = [{\n      name: \"01\",\n      value: \"01\"\n    }, {\n      name: \"02\",\n      value: \"02\"\n    }, {\n      name: \"03\",\n      value: \"03\"\n    }, {\n      name: \"04\",\n      value: \"04\"\n    }, {\n      name: \"05\",\n      value: \"05\"\n    }, {\n      name: \"06\",\n      value: \"06\"\n    }, {\n      name: \"07\",\n      value: \"07\"\n    }, {\n      name: \"08\",\n      value: \"08\"\n    }, {\n      name: \"09\",\n      value: \"09\"\n    }, {\n      name: \"10\",\n      value: \"10\"\n    }, {\n      name: \"11\",\n      value: \"11\"\n    }, {\n      name: \"12\",\n      value: \"12\"\n    }];\n    var partnerOptions = [];\n\n    for (var i = 0; i < _this.props.app.xivodafone.partners.length; i++) {\n      partnerOptions.push({\n        name: _this.props.app.xivodafone.partners[i].partnerName,\n        value: _this.props.app.xivodafone.partners[i].partnerId\n      });\n    }\n\n    var clientOptions = [];\n\n    for (var i = 0; i < _this.props.app.xivodafone.clientsForReport.length; i++) {\n      clientOptions.push({\n        name: _this.props.app.xivodafone.clientsForReport[i].customerName,\n        value: _this.props.app.xivodafone.clientsForReport[i].customerId\n      });\n    }\n\n    _this.state = {\n      reportType: \"Monthly\",\n      monthlyReportFormModel: {\n        year: {\n          value: '',\n          name: 'year',\n          type: 'select',\n          label: '',\n          placeholder: 'Yıl seçin',\n          options: yearOptions,\n          error: 'Lütfen yıl seçin.',\n          isSmall: true,\n          valid: false,\n          touched: false,\n          validationRules: {}\n        },\n        month: {\n          value: '',\n          name: 'month',\n          type: 'select',\n          label: '',\n          placeholder: 'Ay seçin',\n          options: monthOptions,\n          error: 'Lütfen ay seçin.',\n          isSmall: true,\n          valid: false,\n          touched: false,\n          validationRules: {}\n        },\n        xPartnerId: {\n          value: '',\n          name: 'xPartnerId',\n          type: 'select',\n          label: '',\n          placeholder: 'Partner seçin',\n          options: partnerOptions,\n          error: 'Lütfen partner seçin.',\n          isSmall: true,\n          valid: false,\n          touched: false,\n          validationRules: {}\n        },\n        xCustomerId: {\n          value: '',\n          name: 'xCustomerId',\n          type: 'select',\n          label: '',\n          placeholder: 'Müşteri seçin',\n          options: clientOptions,\n          error: 'Lütfen müşteri seçin.',\n          isSmall: true,\n          valid: false,\n          touched: false,\n          validationRules: {}\n        }\n      },\n      quotaReportFormModel: {\n        xPartnerId: {\n          value: '',\n          name: 'xPartnerId',\n          type: 'select',\n          label: '',\n          placeholder: 'Partner seçin',\n          options: partnerOptions,\n          error: 'Lütfen partner seçin.',\n          isSmall: true,\n          valid: false,\n          touched: false,\n          validationRules: {}\n        },\n        xCustomerId: {\n          value: '',\n          name: 'xCustomerId',\n          type: 'select',\n          label: '',\n          placeholder: 'Müşteri seçin',\n          options: clientOptions,\n          error: 'Lütfen müşteri seçin.',\n          isSmall: true,\n          valid: false,\n          touched: false,\n          validationRules: {}\n        }\n      },\n      sendReportFormModel: {\n        xPartnerId: {\n          value: '',\n          name: 'xPartnerId',\n          type: 'select',\n          label: '',\n          placeholder: 'Partner seçin',\n          options: partnerOptions,\n          error: 'Lütfen partner seçin.',\n          isSmall: true,\n          valid: false,\n          touched: false,\n          validationRules: {}\n        },\n        xCustomerId: {\n          value: '',\n          name: 'xCustomerId',\n          type: 'select',\n          label: '',\n          placeholder: 'Müşteri seçin',\n          options: clientOptions,\n          error: 'Lütfen müşteri seçin.',\n          isSmall: true,\n          valid: false,\n          touched: false,\n          validationRules: {}\n        }\n      }\n    };\n    _this.changeReportType = _this.changeReportType.bind(_assertThisInitialized(_this));\n    _this.onMonthlyFormInputChange = _this.onMonthlyFormInputChange.bind(_assertThisInitialized(_this));\n    _this.onQuotaFormInputChange = _this.onQuotaFormInputChange.bind(_assertThisInitialized(_this));\n    _this.onSendFormInputChange = _this.onSendFormInputChange.bind(_assertThisInitialized(_this));\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_this));\n    _this.getReport = _this.getReport.bind(_assertThisInitialized(_this));\n    _this.monthlyReportChangePage = _this.monthlyReportChangePage.bind(_assertThisInitialized(_this));\n    _this.quotaReportChangePage = _this.quotaReportChangePage.bind(_assertThisInitialized(_this));\n    _this.sendReportChangePage = _this.sendReportChangePage.bind(_assertThisInitialized(_this));\n    _this.downloadSendReport = _this.downloadSendReport.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(PartnerReport, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      if (this.props.app.xivodafone.partners.length < 1) {\n        this.props.dispatch(partners({}, function (data) {\n          _this2.props.dispatch(dispatchItem(\"PARTNER_LIST\", data.Partners));\n        }, function () {}));\n      }\n\n      var serviceData = {};\n      this.props.dispatch(xiVodafoneReportClientList(serviceData, function (data) {\n        _this2.props.dispatch(dispatchItem(\"XIVODAFONE_CLIENT_LIST_FOR_REPORT\", data.Customers));\n      }, function () {}));\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      if (this.props.app.xivodafone.partners !== nextProps.app.xivodafone.partners) {\n        var partnerOptions = [];\n\n        for (var i = 0; i < nextProps.app.xivodafone.partners.length; i++) {\n          partnerOptions.push({\n            name: nextProps.app.xivodafone.partners[i].partnerName,\n            value: nextProps.app.xivodafone.partners[i].partnerId\n          });\n        }\n\n        this.setState({\n          monthlyReportFormModel: _objectSpread({}, this.state.monthlyReportFormModel, {\n            xPartnerId: _objectSpread({}, this.state.monthlyReportFormModel.xPartnerId, {\n              options: partnerOptions\n            })\n          }),\n          quotaReportFormModel: _objectSpread({}, this.state.quotaReportFormModel, {\n            xPartnerId: _objectSpread({}, this.state.quotaReportFormModel.xPartnerId, {\n              options: partnerOptions\n            })\n          }),\n          sendReportFormModel: _objectSpread({}, this.state.sendReportFormModel, {\n            xPartnerId: _objectSpread({}, this.state.sendReportFormModel.xPartnerId, {\n              options: partnerOptions\n            })\n          })\n        });\n      }\n\n      if (this.props.app.xivodafone.clientsForReport !== nextProps.app.xivodafone.clientsForReport) {\n        var clientOptions = [];\n\n        for (var i = 0; i < nextProps.app.xivodafone.clientsForReport.length; i++) {\n          clientOptions.push({\n            name: nextProps.app.xivodafone.clientsForReport[i].customerName,\n            value: nextProps.app.xivodafone.clientsForReport[i].customerId\n          });\n        }\n\n        if (this.state.reportType == \"Monthly\") {\n          this.setState({\n            monthlyReportFormModel: _objectSpread({}, this.state.monthlyReportFormModel, {\n              xCustomerId: _objectSpread({}, this.state.monthlyReportFormModel.xCustomerId, {\n                options: clientOptions\n              })\n            })\n          });\n        }\n\n        if (this.state.reportType == \"Quota\") {\n          this.setState({\n            quotaReportFormModel: _objectSpread({}, this.state.quotaReportFormModel, {\n              xCustomerId: _objectSpread({}, this.state.quotaReportFormModel.xCustomerId, {\n                options: clientOptions\n              })\n            })\n          });\n        }\n\n        if (this.state.reportType == \"Send\") {\n          this.setState({\n            sendReportFormModel: _objectSpread({}, this.state.sendReportFormModel, {\n              xCustomerId: _objectSpread({}, this.state.sendReportFormModel.xCustomerId, {\n                options: clientOptions\n              })\n            })\n          });\n        }\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.props.dispatch(dispatchItem(\"XIVODAFONE_PARTNERREPORT_MONTHLY\", []));\n      this.props.dispatch(dispatchItem(\"XIVODAFONE_PARTNERREPORT_MONTHLY_COUNT\", 0));\n      this.props.dispatch(dispatchItem(\"XIVODAFONE_PARTNERREPORT_QUOTA\", []));\n      this.props.dispatch(dispatchItem(\"XIVODAFONE_PARTNERREPORT_QUOTA_COUNT\", 0));\n      this.props.dispatch(dispatchItem(\"XIVODAFONE_PARTNERREPORT_SEND\", []));\n      this.props.dispatch(dispatchItem(\"XIVODAFONE_PARTNERREPORT_SEND_COUNT\", 0));\n    }\n  }, {\n    key: \"changeReportType\",\n    value: function changeReportType(reportType) {\n      if (reportType != this.state.reportType) {}\n\n      this.setState({\n        reportType: reportType,\n        monthlyReportFormModel: _objectSpread({}, this.state.monthlyReportFormModel, {\n          month: _objectSpread({}, this.state.monthlyReportFormModel.month, {\n            value: \"\"\n          }),\n          year: _objectSpread({}, this.state.monthlyReportFormModel.year, {\n            value: \"\"\n          }),\n          xCustomerId: _objectSpread({}, this.state.monthlyReportFormModel.xCustomerId, {\n            value: \"\",\n            options: []\n          }),\n          xPartnerId: _objectSpread({}, this.state.monthlyReportFormModel.xPartnerId, {\n            value: \"\"\n          })\n        }),\n        quotaReportFormModel: _objectSpread({}, this.state.quotaReportFormModel, {\n          xCustomerId: _objectSpread({}, this.state.quotaReportFormModel.xCustomerId, {\n            value: \"\",\n            options: []\n          }),\n          xPartnerId: _objectSpread({}, this.state.quotaReportFormModel.xPartnerId, {\n            value: \"\"\n          })\n        }),\n        sendReportFormModel: _objectSpread({}, this.state.sendReportFormModel, {\n          xCustomerId: _objectSpread({}, this.state.sendReportFormModel.xCustomerId, {\n            value: \"\",\n            options: []\n          }),\n          xPartnerId: _objectSpread({}, this.state.sendReportFormModel.xPartnerId, {\n            value: \"\"\n          })\n        })\n      });\n    }\n  }, {\n    key: \"onMonthlyFormInputChange\",\n    value: function onMonthlyFormInputChange(model, name) {\n      var _this3 = this;\n\n      if (name == \"xPartnerId\") {\n        var serviceData = {\n          xPartnerId: model.xPartnerId.value\n        };\n        this.props.dispatch(xiVodafoneReportClientList(serviceData, function (data) {\n          _this3.props.dispatch(dispatchItem(\"XIVODAFONE_CLIENT_LIST_FOR_REPORT\", data.Customers));\n        }, function () {}));\n        this.setState({\n          monthlyReportFormModel: _objectSpread({}, this.state.monthlyReportFormModel, {\n            xCustomerId: _objectSpread({}, this.state.monthlyReportFormModel.xCustomerId, {\n              value: '',\n              valid: false,\n              touched: false\n            })\n          })\n        });\n      }\n    }\n  }, {\n    key: \"onQuotaFormInputChange\",\n    value: function onQuotaFormInputChange(model, name) {\n      var _this4 = this;\n\n      if (name == \"xPartnerId\") {\n        var serviceData = {\n          xPartnerId: model.xPartnerId.value\n        };\n        this.props.dispatch(xiVodafoneReportClientList(serviceData, function (data) {\n          _this4.props.dispatch(dispatchItem(\"XIVODAFONE_CLIENT_LIST_FOR_REPORT\", data.Customers));\n        }, function () {}));\n        this.setState({\n          quotaReportFormModel: _objectSpread({}, this.state.quotaReportFormModel, {\n            xCustomerId: _objectSpread({}, this.state.quotaReportFormModel.xCustomerId, {\n              value: '',\n              valid: false,\n              touched: false\n            })\n          })\n        });\n      }\n    }\n  }, {\n    key: \"onSendFormInputChange\",\n    value: function onSendFormInputChange(model, name) {\n      var _this5 = this;\n\n      if (name == \"xPartnerId\") {\n        var serviceData = {\n          xPartnerId: model.xPartnerId.value\n        };\n        this.props.dispatch(xiVodafoneReportClientList(serviceData, function (data) {\n          _this5.props.dispatch(dispatchItem(\"XIVODAFONE_CLIENT_LIST_FOR_REPORT\", data.Customers));\n        }, function () {}));\n        this.setState({\n          sendReportFormModel: _objectSpread({}, this.state.sendReportFormModel, {\n            xCustomerId: _objectSpread({}, this.state.sendReportFormModel.xCustomerId, {\n              value: '',\n              valid: false,\n              touched: false\n            })\n          })\n        });\n      }\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit(data) {\n      this.getReport(data);\n    }\n  }, {\n    key: \"getReport\",\n    value: function getReport(data) {\n      var _this6 = this;\n\n      var serviceData = data;\n\n      if (!serviceData) {\n        serviceData = {};\n      }\n\n      this.setState({\n        lastSendData: serviceData\n      });\n\n      if (this.state.reportType == \"Monthly\") {\n        this.props.dispatch(xiVodafonePartnerReportMonthly(serviceData, function (data) {\n          _this6.props.dispatch(dispatchItem(\"XIVODAFONE_PARTNERREPORT_MONTHLY\", data.monthlyReportInfos));\n\n          _this6.props.dispatch(dispatchItem(\"XIVODAFONE_PARTNERREPORT_MONTHLY_COUNT\", data.totalSize));\n\n          if (!serviceData[\"page\"] || serviceData[\"page\"] == 0) {\n            _this6.monthlyReportPagingReset();\n          }\n        }, function () {}));\n      } else if (this.state.reportType == \"Quota\") {\n        this.props.dispatch(xiVodafonePartnerReportQuota(serviceData, function (data) {\n          _this6.props.dispatch(dispatchItem(\"XIVODAFONE_PARTNERREPORT_QUOTA\", data.customerQuotaInfos));\n\n          _this6.props.dispatch(dispatchItem(\"XIVODAFONE_PARTNERREPORT_QUOTA_COUNT\", data.totalSize));\n\n          if (!serviceData[\"page\"] || serviceData[\"page\"] == 0) {\n            _this6.quotaReportPagingReset();\n          }\n        }, function () {}));\n      } else if (this.state.reportType == \"Send\") {\n        this.props.dispatch(xiVodafonePartnerReportSend(serviceData, function (data) {\n          _this6.props.dispatch(dispatchItem(\"XIVODAFONE_PARTNERREPORT_SEND\", data.sendSmsInfos));\n\n          _this6.props.dispatch(dispatchItem(\"XIVODAFONE_PARTNERREPORT_SEND_COUNT\", data.totalSize));\n\n          if (!serviceData[\"page\"] || serviceData[\"page\"] == 0) {\n            _this6.sendReportPagingReset();\n          }\n        }, function () {}));\n      }\n    }\n  }, {\n    key: \"monthlyReportChangePage\",\n    value: function monthlyReportChangePage(pageNumber, pageSize) {\n      var model = this.state.lastSendData;\n      model[\"page\"] = pageNumber;\n      model[\"size\"] = pageSize;\n      this.getReport(model);\n    }\n  }, {\n    key: \"quotaReportChangePage\",\n    value: function quotaReportChangePage(pageNumber, pageSize) {\n      var model = this.state.lastSendData;\n      model[\"page\"] = pageNumber;\n      model[\"size\"] = pageSize;\n      this.getReport(model);\n    }\n  }, {\n    key: \"sendReportChangePage\",\n    value: function sendReportChangePage(pageNumber, pageSize) {\n      var model = this.state.lastSendData;\n      model[\"page\"] = pageNumber;\n      model[\"size\"] = pageSize;\n      this.getReport(model);\n    }\n  }, {\n    key: \"downloadSendReport\",\n    value: function downloadSendReport(xCustomerId) {\n      this.props.dispatch(xiVodafonePartnerReportSendDownload(xCustomerId, function () {}, function () {}));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this7 = this;\n\n      return React.createElement(\"section\", {\n        className: \"panel\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 512\n        },\n        __self: this\n      }, React.createElement(Message, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 513\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 514\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"tabs\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 515\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"tab-menu\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 516\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        className: this.state.reportType == \"Monthly\" ? \"active\" : \"\",\n        href: \"javascript:void(0)\",\n        title: \"Ayl\\u0131k G\\xF6nderim Raporu\",\n        onClick: function onClick() {\n          return _this7.changeReportType(\"Monthly\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 517\n        },\n        __self: this\n      }, \"Ayl\\u0131k G\\xF6nderim Raporu\"), React.createElement(\"a\", {\n        className: this.state.reportType == \"Quota\" ? \"active\" : \"\",\n        href: \"javascript:void(0)\",\n        title: \"Partner Kalan Adet Raporu\",\n        onClick: function onClick() {\n          return _this7.changeReportType(\"Quota\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 520\n        },\n        __self: this\n      }, \"Partner Kalan Adet Raporu\"), React.createElement(\"a\", {\n        className: this.state.reportType == \"Send\" ? \"active\" : \"\",\n        href: \"javascript:void(0)\",\n        title: \"Partner G\\xF6nderim Raporu\",\n        onClick: function onClick() {\n          return _this7.changeReportType(\"Send\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 523\n        },\n        __self: this\n      }, \"Partner G\\xF6nderim Raporu\")), React.createElement(\"div\", {\n        className: \"tab-items\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 527\n        },\n        __self: this\n      }, this.state.reportType == \"Monthly\" && React.createElement(\"div\", {\n        className: \"tab-item active\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 529\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"table\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 530\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"top\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 531\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"title-default\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 532\n        },\n        __self: this\n      }, \"Ayl\\u0131k G\\xF6nderim Raporu\"), React.createElement(\"div\", {\n        className: \"actions\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 535\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"filter\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 536\n        },\n        __self: this\n      }, React.createElement(Form, {\n        model: this.state.monthlyReportFormModel,\n        handleSubmit: this.handleSubmit,\n        onInputChange: this.onMonthlyFormInputChange,\n        buttonExtraClass: \"tertiary\",\n        buttonText: \"Filtrele\",\n        buttonId: \"xivodafone-report-quota-list-filter\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 537\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"bottom\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 540\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"table-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 541\n        },\n        __self: this\n      }, React.createElement(\"table\", {\n        className: \"sortable\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 542\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 543\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 544\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 545\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 545\n        },\n        __self: this\n      }, \"Y\\u0131l\")), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 546\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 546\n        },\n        __self: this\n      }, \"Ay\")), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 547\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 547\n        },\n        __self: this\n      }, \"Partner\")), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 548\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 548\n        },\n        __self: this\n      }, \"M\\xFC\\u015Fteri\")), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 549\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 549\n        },\n        __self: this\n      }, \"Toplam G\\xF6nderim Adedi\")))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 552\n        },\n        __self: this\n      }, this.props.app.xivodafone.partnerReportMonthly && this.props.app.xivodafone.partnerReportMonthly.map(function (item, i) {\n        return React.createElement(\"tr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 556\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 557\n          },\n          __self: this\n        }, item.year), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 558\n          },\n          __self: this\n        }, item.month), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 559\n          },\n          __self: this\n        }, item.partnerName), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 560\n          },\n          __self: this\n        }, item.companyName), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 561\n          },\n          __self: this\n        }, item.totalSendCount));\n      }))))), React.createElement(\"div\", {\n        className: \"paging-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 570\n        },\n        __self: this\n      }, React.createElement(Paging, {\n        setReset: function setReset(reset) {\n          return _this7.monthlyReportPagingReset = reset;\n        },\n        totalItemCount: this.props.app.xivodafone.partnerReportMonthlyCount,\n        pageSize: this.state.pageSize,\n        changePage: this.monthlyReportChangePage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 571\n        },\n        __self: this\n      })))), this.state.reportType == \"Quota\" && React.createElement(\"div\", {\n        className: \"tab-item active\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 577\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"table\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 578\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"top\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 579\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"title-default\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 580\n        },\n        __self: this\n      }, \"Partner Kalan Adet Raporu\"), React.createElement(\"div\", {\n        className: \"actions\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 583\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"filter\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 584\n        },\n        __self: this\n      }, React.createElement(Form, {\n        model: this.state.quotaReportFormModel,\n        handleSubmit: this.handleSubmit,\n        onInputChange: this.onQuotaFormInputChange,\n        buttonExtraClass: \"tertiary\",\n        buttonText: \"Filtrele\",\n        buttonId: \"xivodafone-report-quota-list-filter\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 585\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"bottom\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 588\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"table-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 589\n        },\n        __self: this\n      }, React.createElement(\"table\", {\n        className: \"sortable\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 590\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 591\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 592\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 593\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 593\n        },\n        __self: this\n      }, \"M\\xFC\\u015Fteri Ad\\u0131\")), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 594\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 594\n        },\n        __self: this\n      }, \"Durumu\")), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 595\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 595\n        },\n        __self: this\n      }, \"Toplam Al\\u0131nan Adet\")), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 596\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 596\n        },\n        __self: this\n      }, \"Kalan Adet\")), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 597\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 597\n        },\n        __self: this\n      }, \"S\\xF6zle\\u015Fme Ba\\u015Flang\\u0131\\xE7\")), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 598\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 598\n        },\n        __self: this\n      }, \"S\\xF6zle\\u015Fme Biti\\u015F\")), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 599\n        },\n        __self: this\n      }))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 602\n        },\n        __self: this\n      }, this.props.app.xivodafone.partnerReportQuota && this.props.app.xivodafone.partnerReportQuota.map(function (item, i) {\n        return React.createElement(\"tr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 606\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 607\n          },\n          __self: this\n        }, item.companyName), React.createElement(\"td\", {\n          className: item.customerStatus == \"ACTIVE\" ? \"green\" : item.customerStatus == \"PASSIVE\" ? \"red\" : \"\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 608\n          },\n          __self: this\n        }, item.customerStatus == \"ACTIVE\" ? \"Aktif\" : item.customerStatus == \"PASSIVE\" ? \"Aktif değil\" : \"\"), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 609\n          },\n          __self: this\n        }, item.limit), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 610\n          },\n          __self: this\n        }, item.sendCount), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 611\n          },\n          __self: this\n        }, moment(item.contractStartDate).format('DD.MM.YYYY')), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 612\n          },\n          __self: this\n        }, moment(item.contractEndDate).format('DD.MM.YYYY')), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 613\n          },\n          __self: this\n        }, React.createElement(\"a\", {\n          id: \"download-report-send-excel-\" + i,\n          className: \"btn primary\",\n          href: \"javascript:void(0)\",\n          title: \"Excel Olarak \\u0130ndir\",\n          onClick: function onClick() {\n            return _this7.downloadSendReport(item.id);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 614\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 615\n          },\n          __self: this\n        }, \"Excel Olarak \\u0130ndir\"))));\n      }))))), React.createElement(\"div\", {\n        className: \"paging-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 626\n        },\n        __self: this\n      }, React.createElement(Paging, {\n        setReset: function setReset(reset) {\n          return _this7.quotaReportPagingReset = reset;\n        },\n        totalItemCount: this.props.app.xivodafone.partnerReportQuotaCount,\n        pageSize: this.state.pageSize,\n        changePage: this.quotaReportChangePage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 627\n        },\n        __self: this\n      })))), this.state.reportType == \"Send\" && React.createElement(\"div\", {\n        className: \"tab-item active\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 634\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"table\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 635\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"top\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 636\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"title-default\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 637\n        },\n        __self: this\n      }, \"Partner G\\xF6nderim Raporu\"), React.createElement(\"div\", {\n        className: \"actions\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 640\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"filter\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 641\n        },\n        __self: this\n      }, React.createElement(Form, {\n        model: this.state.sendReportFormModel,\n        handleSubmit: this.handleSubmit,\n        onInputChange: this.onSendFormInputChange,\n        buttonExtraClass: \"tertiary\",\n        buttonText: \"Filtrele\",\n        buttonId: \"xivodafone-report-quota-list-filter\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 642\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"bottom\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 645\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"table-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 646\n        },\n        __self: this\n      }, React.createElement(\"table\", {\n        className: \"sortable\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 647\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 648\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 649\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 650\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 650\n        },\n        __self: this\n      }, \"Partner\")), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 651\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 651\n        },\n        __self: this\n      }, \"Kullan\\u0131c\\u0131 Ad\\u0131\")), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 652\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 652\n        },\n        __self: this\n      }, \"G\\xF6nderim Durumu\")), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 653\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 653\n        },\n        __self: this\n      }, \"G\\xF6nderilen Adet\")), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 654\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 654\n        },\n        __self: this\n      }, \"Kalan Adet\")), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 655\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 655\n        },\n        __self: this\n      }, \"S\\xF6zle\\u015Fme Biti\\u015F\")))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 658\n        },\n        __self: this\n      }, this.props.app.xivodafone.partnerReportSend && this.props.app.xivodafone.partnerReportSend.map(function (item, i) {\n        return React.createElement(\"tr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 662\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 663\n          },\n          __self: this\n        }, item.partnerName), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 664\n          },\n          __self: this\n        }, item.campaignName), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 665\n          },\n          __self: this\n        }, item.sendingStatus === 'DRAFT' ? 'ONAYDA' : item.sendingStatus === 'COMPLETED' ? 'BEKLEMEDE' : item.sendingStatus === 'CANCELLED' ? 'İPTAL EDİLDİ' : item.sendingStatus === 'SEND' ? 'DEVAM EDİYOR' : item.sendingStatus === 'REJECTED' ? 'DÜZENLENMELİ' : item.sendingStatus === 'FINISHED' ? 'TAMAMLANDI' : item.sendingStatus === 'READYTOQUOTA' ? 'TAMAMLANDI' : ''), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 674\n          },\n          __self: this\n        }, item.sendCount), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 675\n          },\n          __self: this\n        }, item.remainingCount), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 676\n          },\n          __self: this\n        }, moment(item.contractEndDate).format('DD.MM.YYYY')));\n      }))))), React.createElement(\"div\", {\n        className: \"paging-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 685\n        },\n        __self: this\n      }, React.createElement(Paging, {\n        setReset: function setReset(reset) {\n          return _this7.sendReportPagingReset = reset;\n        },\n        totalItemCount: this.props.app.xivodafone.partnerReportSendCount,\n        pageSize: this.state.pageSize,\n        changePage: this.sendReportChangePage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 686\n        },\n        __self: this\n      }))))))));\n    }\n  }]);\n\n  return PartnerReport;\n}(React.Component);\n\nfunction mapStateToProps(state) {\n  return {\n    app: state.app\n  };\n}\n\nexport default connect(mapStateToProps)(PartnerReport);","map":{"version":3,"sources":["/Users/mugeyakin/Projects/react/react-validation/src/pages/XIVodafone/PartnerReport/list.js"],"names":["React","connect","BrowserRouter","Router","Link","moment","Paging","Form","Message","xiVodafoneReportClientList","partners","xiVodafonePartnerReportMonthly","xiVodafonePartnerReportQuota","xiVodafonePartnerReportSend","xiVodafonePartnerReportSendDownload","dispatchItem","PartnerReport","props","yearOptions","name","value","monthOptions","partnerOptions","i","app","xivodafone","length","push","partnerName","partnerId","clientOptions","clientsForReport","customerName","customerId","state","reportType","monthlyReportFormModel","year","type","label","placeholder","options","error","isSmall","valid","touched","validationRules","month","xPartnerId","xCustomerId","quotaReportFormModel","sendReportFormModel","changeReportType","bind","onMonthlyFormInputChange","onQuotaFormInputChange","onSendFormInputChange","handleSubmit","getReport","monthlyReportChangePage","quotaReportChangePage","sendReportChangePage","downloadSendReport","dispatch","data","Partners","serviceData","Customers","nextProps","setState","model","lastSendData","monthlyReportInfos","totalSize","monthlyReportPagingReset","customerQuotaInfos","quotaReportPagingReset","sendSmsInfos","sendReportPagingReset","pageNumber","pageSize","partnerReportMonthly","map","item","companyName","totalSendCount","reset","partnerReportMonthlyCount","partnerReportQuota","customerStatus","limit","sendCount","contractStartDate","format","contractEndDate","id","partnerReportQuotaCount","partnerReportSend","campaignName","sendingStatus","remainingCount","partnerReportSendCount","Component","mapStateToProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport {\n  BrowserRouter as Router,\n  Link\n} from \"react-router-dom\";\nimport moment from 'moment';\nimport Paging from '../../../components/paging/index';\nimport Form from '../../../components/form/form';\nimport Message from '../../../components/message/index';\nimport { xiVodafoneReportClientList, partners, xiVodafonePartnerReportMonthly, xiVodafonePartnerReportQuota, xiVodafonePartnerReportSend, xiVodafonePartnerReportSendDownload, dispatchItem } from '../../../actions/actions';\n\nclass PartnerReport extends React.Component {\n    constructor(props)\n    {\n        super(props)\n\n        var yearOptions = [ { name: \"2020\", value: \"2020\" }, { name: \"2019\", value: \"2019\" }, { name: \"2018\", value: \"2018\" }];\n        var monthOptions = [{ name: \"01\", value: \"01\" }, { name: \"02\", value: \"02\" }, { name: \"03\", value: \"03\" }, { name: \"04\", value: \"04\" }, { name: \"05\", value: \"05\" }, { name: \"06\", value: \"06\" }, { name: \"07\", value: \"07\" }, { name: \"08\", value: \"08\" }, { name: \"09\", value: \"09\" }, { name: \"10\", value: \"10\" }, { name: \"11\", value: \"11\" }, { name: \"12\", value: \"12\" }];\n\n        var partnerOptions = [];\n        for(var i = 0; i < this.props.app.xivodafone.partners.length; i++){\n            partnerOptions.push({\n                name: this.props.app.xivodafone.partners[i].partnerName,\n                value: this.props.app.xivodafone.partners[i].partnerId\n            });\n        }\n\n        var clientOptions = [];\n        for(var i = 0; i < this.props.app.xivodafone.clientsForReport.length; i++){\n            clientOptions.push({\n                name: this.props.app.xivodafone.clientsForReport[i].customerName,\n                value: this.props.app.xivodafone.clientsForReport[i].customerId\n            });\n        }\n        \n        this.state = {\n            reportType: \"Monthly\",\n            monthlyReportFormModel: {\n                year: {\n                    value: '',\n                    name: 'year',\n                    type: 'select',\n                    label: '',\n                    placeholder: 'Yıl seçin',\n                    options: yearOptions,\n                    error: 'Lütfen yıl seçin.',\n                    isSmall: true,\n                    valid: false,\n                    touched: false,\n                    validationRules: {\n                    }\n                },\n                month: {\n                    value: '',\n                    name: 'month',\n                    type: 'select',\n                    label: '',\n                    placeholder: 'Ay seçin',\n                    options: monthOptions,\n                    error: 'Lütfen ay seçin.',\n                    isSmall: true,\n                    valid: false,\n                    touched: false,\n                    validationRules: {\n                    }\n                },\n                xPartnerId: {\n                    value: '',\n                    name: 'xPartnerId',\n                    type: 'select',\n                    label: '',\n                    placeholder: 'Partner seçin',\n                    options: partnerOptions,\n                    error: 'Lütfen partner seçin.',\n                    isSmall: true,\n                    valid: false,\n                    touched: false,\n                    validationRules: {\n                    }\n                },\n                xCustomerId: {\n                    value: '',\n                    name: 'xCustomerId',\n                    type: 'select',\n                    label: '',\n                    placeholder: 'Müşteri seçin',\n                    options: clientOptions,\n                    error: 'Lütfen müşteri seçin.',\n                    isSmall: true,\n                    valid: false,\n                    touched: false,\n                    validationRules: {\n                    }\n                }\n            },\n            quotaReportFormModel: {\n                xPartnerId: {\n                    value: '',\n                    name: 'xPartnerId',\n                    type: 'select',\n                    label: '',\n                    placeholder: 'Partner seçin',\n                    options: partnerOptions,\n                    error: 'Lütfen partner seçin.',\n                    isSmall: true,\n                    valid: false,\n                    touched: false,\n                    validationRules: {\n                    }\n                },\n                xCustomerId: {\n                    value: '',\n                    name: 'xCustomerId',\n                    type: 'select',\n                    label: '',\n                    placeholder: 'Müşteri seçin',\n                    options: clientOptions,\n                    error: 'Lütfen müşteri seçin.',\n                    isSmall: true,\n                    valid: false,\n                    touched: false,\n                    validationRules: {\n                    }\n                }\n            },\n            sendReportFormModel: {\n                xPartnerId: {\n                    value: '',\n                    name: 'xPartnerId',\n                    type: 'select',\n                    label: '',\n                    placeholder: 'Partner seçin',\n                    options: partnerOptions,\n                    error: 'Lütfen partner seçin.',\n                    isSmall: true,\n                    valid: false,\n                    touched: false,\n                    validationRules: {\n                    }\n                },\n                xCustomerId: {\n                    value: '',\n                    name: 'xCustomerId',\n                    type: 'select',\n                    label: '',\n                    placeholder: 'Müşteri seçin',\n                    options: clientOptions,\n                    error: 'Lütfen müşteri seçin.',\n                    isSmall: true,\n                    valid: false,\n                    touched: false,\n                    validationRules: {\n                    }\n                }\n            }\n        };\n\n        this.changeReportType = this.changeReportType.bind(this);\n        this.onMonthlyFormInputChange = this.onMonthlyFormInputChange.bind(this);\n        this.onQuotaFormInputChange = this.onQuotaFormInputChange.bind(this);\n        this.onSendFormInputChange = this.onSendFormInputChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.getReport = this.getReport.bind(this);\n        this.monthlyReportChangePage = this.monthlyReportChangePage.bind(this);\n        this.quotaReportChangePage = this.quotaReportChangePage.bind(this);\n        this.sendReportChangePage = this.sendReportChangePage.bind(this);\n        this.downloadSendReport = this.downloadSendReport.bind(this);\n    }\n\n    componentDidMount() {\n        if (this.props.app.xivodafone.partners.length < 1) {\n            this.props.dispatch(partners({}, (data) => {\n                this.props.dispatch(dispatchItem(\"PARTNER_LIST\", data.Partners));\n            }, () => {\n\n            }));\n        }\n\n        var serviceData = {\n        }\n        this.props.dispatch(xiVodafoneReportClientList(serviceData, (data) => {\n            this.props.dispatch(dispatchItem(\"XIVODAFONE_CLIENT_LIST_FOR_REPORT\", data.Customers));\n        }, () => {\n\n        }));\n    \n        \n    }\n\n    componentWillReceiveProps(nextProps)\n    {\n        if(this.props.app.xivodafone.partners !== nextProps.app.xivodafone.partners) {\n            var partnerOptions = [];\n        \n            for(var i = 0; i < nextProps.app.xivodafone.partners.length; i++){\n                partnerOptions.push({\n                    name: nextProps.app.xivodafone.partners[i].partnerName,\n                    value: nextProps.app.xivodafone.partners[i].partnerId\n                });\n            }\n\n            this.setState({\n                monthlyReportFormModel: {\n                    ...this.state.monthlyReportFormModel,\n                    xPartnerId: {\n                        ...this.state.monthlyReportFormModel.xPartnerId,\n                        options: partnerOptions\n                    }\n                },\n                quotaReportFormModel: {\n                    ...this.state.quotaReportFormModel,\n                    xPartnerId: {\n                        ...this.state.quotaReportFormModel.xPartnerId,\n                        options: partnerOptions\n                    }\n                },\n                sendReportFormModel: {\n                    ...this.state.sendReportFormModel,\n                    xPartnerId: {\n                        ...this.state.sendReportFormModel.xPartnerId,\n                        options: partnerOptions\n                    }\n                }\n            });\n        }\n\n        if(this.props.app.xivodafone.clientsForReport !== nextProps.app.xivodafone.clientsForReport) {\n            var clientOptions = [];\n        \n            for(var i = 0; i < nextProps.app.xivodafone.clientsForReport.length; i++){\n                clientOptions.push({\n                    name: nextProps.app.xivodafone.clientsForReport[i].customerName,\n                    value: nextProps.app.xivodafone.clientsForReport[i].customerId\n                });\n            }\n\n            if(this.state.reportType == \"Monthly\") {\n                    this.setState({\n                        monthlyReportFormModel: {\n                            ...this.state.monthlyReportFormModel,\n                            xCustomerId: {\n                                ...this.state.monthlyReportFormModel.xCustomerId,\n                                options: clientOptions\n                            }\n                        }\n                    });\n            }\n\n            if(this.state.reportType == \"Quota\") {\n                this.setState({\n                    quotaReportFormModel: {\n                        ...this.state.quotaReportFormModel,\n                        xCustomerId: {\n                            ...this.state.quotaReportFormModel.xCustomerId,\n                            options: clientOptions\n                        }\n                    }\n                });\n            }\n\n            if(this.state.reportType == \"Send\") {\n                this.setState({\n                    sendReportFormModel: {\n                        ...this.state.sendReportFormModel,\n                        xCustomerId: {\n                            ...this.state.sendReportFormModel.xCustomerId,\n                            options: clientOptions\n                        }\n                    }\n                });\n            }  \n        }\n    }\n\n    componentWillUnmount () {\n        this.props.dispatch(dispatchItem(\"XIVODAFONE_PARTNERREPORT_MONTHLY\",[]));\n        this.props.dispatch(dispatchItem(\"XIVODAFONE_PARTNERREPORT_MONTHLY_COUNT\", 0));\n        this.props.dispatch(dispatchItem(\"XIVODAFONE_PARTNERREPORT_QUOTA\",[]));\n        this.props.dispatch(dispatchItem(\"XIVODAFONE_PARTNERREPORT_QUOTA_COUNT\", 0));\n        this.props.dispatch(dispatchItem(\"XIVODAFONE_PARTNERREPORT_SEND\",[]));\n        this.props.dispatch(dispatchItem(\"XIVODAFONE_PARTNERREPORT_SEND_COUNT\", 0));\n    }\n\n    changeReportType(reportType) {\n        if(reportType != this.state.reportType)\n        {\n\n        }\n        this.setState({\n            reportType: reportType,\n            monthlyReportFormModel: {\n                ...this.state.monthlyReportFormModel,\n                month: {\n                    ...this.state.monthlyReportFormModel.month,\n                    value: \"\"\n                },\n                year: {\n                    ...this.state.monthlyReportFormModel.year,\n                    value: \"\"\n                },\n                xCustomerId: {\n                    ...this.state.monthlyReportFormModel.xCustomerId,\n                    value: \"\",\n                    options: []\n                },\n                xPartnerId: {\n                    ...this.state.monthlyReportFormModel.xPartnerId,\n                    value: \"\"\n                }\n            },\n            quotaReportFormModel: {\n                ...this.state.quotaReportFormModel,\n                xCustomerId: {\n                    ...this.state.quotaReportFormModel.xCustomerId,\n                    value: \"\",\n                    options: []\n                },\n                xPartnerId: {\n                    ...this.state.quotaReportFormModel.xPartnerId,\n                    value: \"\"\n                }\n            },\n            sendReportFormModel: {\n                ...this.state.sendReportFormModel,\n                xCustomerId: {\n                    ...this.state.sendReportFormModel.xCustomerId,\n                    value: \"\",\n                    options: []\n                },\n                xPartnerId: {\n                    ...this.state.sendReportFormModel.xPartnerId,\n                    value: \"\"\n                }\n            }\n        })\n    }\n\n    onMonthlyFormInputChange(model, name) {\n        if(name == \"xPartnerId\")\n        {\n            var serviceData = {\n                xPartnerId: model.xPartnerId.value\n            };\n\n            this.props.dispatch(xiVodafoneReportClientList(serviceData, (data) => {\n                this.props.dispatch(dispatchItem(\"XIVODAFONE_CLIENT_LIST_FOR_REPORT\", data.Customers));\n            }, () => {\n\n            }));\n\n            this.setState({\n                monthlyReportFormModel: {\n                    ...this.state.monthlyReportFormModel,\n                    xCustomerId: {\n                        ...this.state.monthlyReportFormModel.xCustomerId,\n                        value: '',\n                        valid: false,\n                        touched: false\n                    }\n                }\n            });\n        }\n    }\n    onQuotaFormInputChange(model, name) {\n        if(name == \"xPartnerId\")\n        {\n            var serviceData = {\n                xPartnerId: model.xPartnerId.value\n            };\n\n            this.props.dispatch(xiVodafoneReportClientList(serviceData, (data) => {\n                this.props.dispatch(dispatchItem(\"XIVODAFONE_CLIENT_LIST_FOR_REPORT\", data.Customers));\n            }, () => {\n\n            }));\n\n            this.setState({\n                quotaReportFormModel: {\n                    ...this.state.quotaReportFormModel,\n                    xCustomerId: {\n                        ...this.state.quotaReportFormModel.xCustomerId,\n                        value: '',\n                        valid: false,\n                        touched: false\n                    }\n                }\n            });\n        }\n    }\n\n    onSendFormInputChange(model, name) {\n        if(name == \"xPartnerId\")\n        {\n            var serviceData = {\n                xPartnerId: model.xPartnerId.value\n            };\n\n            this.props.dispatch(xiVodafoneReportClientList(serviceData, (data) => {\n                this.props.dispatch(dispatchItem(\"XIVODAFONE_CLIENT_LIST_FOR_REPORT\", data.Customers));\n            }, () => {\n\n            }));\n\n            this.setState({\n                sendReportFormModel: {\n                    ...this.state.sendReportFormModel,\n                    xCustomerId: {\n                        ...this.state.sendReportFormModel.xCustomerId,\n                        value: '',\n                        valid: false,\n                        touched: false\n                    }\n                }\n            });\n        }\n    }\n\n    handleSubmit(data)\n    {\n        this.getReport(data);\n    }\n    \n    getReport(data)\n    {\n        var serviceData = data;\n\n        if(!serviceData)\n        {\n            serviceData = {};\n        }\n\n        this.setState({\n            lastSendData: serviceData\n        });\n\n        if(this.state.reportType == \"Monthly\")\n        {\n            this.props.dispatch(xiVodafonePartnerReportMonthly(serviceData, (data) => {\n                this.props.dispatch(dispatchItem(\"XIVODAFONE_PARTNERREPORT_MONTHLY\", data.monthlyReportInfos));\n                this.props.dispatch(dispatchItem(\"XIVODAFONE_PARTNERREPORT_MONTHLY_COUNT\", data.totalSize));\n                if(!serviceData[\"page\"] || serviceData[\"page\"] == 0)\n                {\n                    this.monthlyReportPagingReset();\n                }\n            }, () => {\n    \n            }));\n        }\n        else if(this.state.reportType == \"Quota\")\n        {\n            this.props.dispatch(xiVodafonePartnerReportQuota(serviceData, (data) => {\n                this.props.dispatch(dispatchItem(\"XIVODAFONE_PARTNERREPORT_QUOTA\", data.customerQuotaInfos));\n                this.props.dispatch(dispatchItem(\"XIVODAFONE_PARTNERREPORT_QUOTA_COUNT\", data.totalSize));\n                if(!serviceData[\"page\"] || serviceData[\"page\"] == 0)\n                {\n                    this.quotaReportPagingReset();\n                }\n            }, () => {\n    \n            }));\n        }\n        else if(this.state.reportType == \"Send\")\n        {\n            this.props.dispatch(xiVodafonePartnerReportSend(serviceData, (data) => {\n                this.props.dispatch(dispatchItem(\"XIVODAFONE_PARTNERREPORT_SEND\", data.sendSmsInfos));\n                this.props.dispatch(dispatchItem(\"XIVODAFONE_PARTNERREPORT_SEND_COUNT\", data.totalSize));\n                if(!serviceData[\"page\"] || serviceData[\"page\"] == 0)\n                {\n                    this.sendReportPagingReset();\n                }\n            }, () => {\n    \n            }));\n        }\n    }\n\n    monthlyReportChangePage(pageNumber, pageSize) {\n        var model = this.state.lastSendData\n        model[\"page\"] = pageNumber;\n        model[\"size\"] = pageSize;\n            \n        this.getReport(model);\n    }\n\n    quotaReportChangePage(pageNumber, pageSize) {\n        var model = this.state.lastSendData\n        model[\"page\"] = pageNumber;\n        model[\"size\"] = pageSize;\n            \n        this.getReport(model);\n    }\n\n    sendReportChangePage(pageNumber, pageSize) {\n        var model = this.state.lastSendData\n        model[\"page\"] = pageNumber;\n        model[\"size\"] = pageSize;\n            \n        this.getReport(model);\n    }\n\n    downloadSendReport(xCustomerId){\n        this.props.dispatch(xiVodafonePartnerReportSendDownload(xCustomerId, () => {\n        }, () => {\n\n        }));\n    }\n    \n    render() {\n\n        return (\n            <section className=\"panel\">\n                <Message />\n                <div className=\"container\">\n                    <div className=\"tabs\">\n                    <div className=\"tab-menu\">\n                            <a className={this.state.reportType == \"Monthly\" ? \"active\" : \"\"} href=\"javascript:void(0)\" title=\"Aylık Gönderim Raporu\" onClick={() => this.changeReportType(\"Monthly\")}>\n                                Aylık Gönderim Raporu\n                            </a>\n                            <a className={this.state.reportType == \"Quota\" ? \"active\" : \"\"} href=\"javascript:void(0)\" title=\"Partner Kalan Adet Raporu\" onClick={() => this.changeReportType(\"Quota\")}>\n                                Partner Kalan Adet Raporu\n                            </a>\n                            <a className={this.state.reportType == \"Send\" ? \"active\" : \"\"} href=\"javascript:void(0)\" title=\"Partner Gönderim Raporu\" onClick={() => this.changeReportType(\"Send\")}>\n                                Partner Gönderim Raporu\n                            </a>\n                        </div>\n                        <div className=\"tab-items\">\n                            {this.state.reportType == \"Monthly\" &&\n                                <div className=\"tab-item active\">\n                                    <div className=\"table\">\n                                        <div className=\"top\">\n                                            <div className=\"title-default\">\n                                                Aylık Gönderim Raporu\n                                            </div>\n                                            <div className=\"actions\"></div>\n                                            <div className=\"filter\">\n                                                <Form model={this.state.monthlyReportFormModel} handleSubmit={this.handleSubmit} onInputChange={this.onMonthlyFormInputChange} buttonExtraClass={\"tertiary\"} buttonText={\"Filtrele\"} buttonId={\"xivodafone-report-quota-list-filter\"} />\n                                            </div>\n                                        </div>\n                                        <div className=\"bottom\">\n                                            <div className=\"table-container\">\n                                                <table className=\"sortable\">\n                                                    <thead>\n                                                        <tr>\n                                                            <th><span>Yıl</span></th>\n                                                            <th><span>Ay</span></th>\n                                                            <th><span>Partner</span></th>\n                                                            <th><span>Müşteri</span></th>\n                                                            <th><span>Toplam Gönderim Adedi</span></th>\n                                                        </tr>\n                                                    </thead>\n                                                    <tbody>\n                                                        {this.props.app.xivodafone.partnerReportMonthly && this.props.app.xivodafone.partnerReportMonthly.map((item, i) => \n                                                            {\n                                                                return (            \n                                                                    <tr>\n                                                                        <td>{item.year}</td>\n                                                                        <td>{item.month}</td>\n                                                                        <td>{item.partnerName}</td>\n                                                                        <td>{item.companyName}</td>\n                                                                        <td>{item.totalSendCount}</td>\n                                                                    </tr>\n                                                                )\n                                                            }\n                                                        )}\n                                                    </tbody>\n                                                </table>\n                                            </div>\n                                        </div>                \n                                        <div className=\"paging-container\">\n                                            <Paging setReset={reset => this.monthlyReportPagingReset = reset} totalItemCount={this.props.app.xivodafone.partnerReportMonthlyCount} pageSize={this.state.pageSize} changePage={this.monthlyReportChangePage} />\n                                        </div>\n                                    </div>\n                                </div>\n                            }\n                            {this.state.reportType == \"Quota\" &&\n                                <div className=\"tab-item active\">\n                                    <div className=\"table\">\n                                        <div className=\"top\">\n                                            <div className=\"title-default\">\n                                                Partner Kalan Adet Raporu\n                                            </div>\n                                            <div className=\"actions\"></div>\n                                            <div className=\"filter\">\n                                                <Form model={this.state.quotaReportFormModel} handleSubmit={this.handleSubmit} onInputChange={this.onQuotaFormInputChange} buttonExtraClass={\"tertiary\"} buttonText={\"Filtrele\"} buttonId={\"xivodafone-report-quota-list-filter\"} />\n                                            </div>\n                                        </div>\n                                        <div className=\"bottom\">\n                                            <div className=\"table-container\">\n                                                <table className=\"sortable\">\n                                                    <thead>\n                                                        <tr>\n                                                            <th><span>Müşteri Adı</span></th>\n                                                            <th><span>Durumu</span></th>\n                                                            <th><span>Toplam Alınan Adet</span></th>\n                                                            <th><span>Kalan Adet</span></th>\n                                                            <th><span>Sözleşme Başlangıç</span></th>\n                                                            <th><span>Sözleşme Bitiş</span></th>\n                                                            <th></th>\n                                                        </tr>\n                                                    </thead>\n                                                    <tbody>\n                                                        {this.props.app.xivodafone.partnerReportQuota && this.props.app.xivodafone.partnerReportQuota.map((item, i) => \n                                                            {\n                                                                return (            \n                                                                    <tr>\n                                                                        <td>{item.companyName}</td>\n                                                                        <td className={(item.customerStatus == \"ACTIVE\" ? \"green\" : (item.customerStatus == \"PASSIVE\" ? \"red\" : \"\"))}>{(item.customerStatus == \"ACTIVE\" ? \"Aktif\" : (item.customerStatus == \"PASSIVE\" ? \"Aktif değil\" : \"\"))}</td>\n                                                                        <td>{item.limit}</td>\n                                                                        <td>{item.sendCount}</td>\n                                                                        <td>{moment(item.contractStartDate).format('DD.MM.YYYY')}</td>\n                                                                        <td>{moment(item.contractEndDate).format('DD.MM.YYYY')}</td>\n                                                                        <td>\n                                                                            <a id={\"download-report-send-excel-\" + i} className=\"btn primary\" href=\"javascript:void(0)\" title=\"Excel Olarak İndir\" onClick={() => this.downloadSendReport(item.id)}>\n                                                                                <span>Excel Olarak İndir</span>\n                                                                            </a>\n                                                                        </td>\n                                                                    </tr>\n                                                                )\n                                                            }\n                                                        )}\n                                                    </tbody>\n                                                </table>\n                                            </div>\n                                        </div>\n                                        <div className=\"paging-container\">\n                                            <Paging setReset={reset => this.quotaReportPagingReset = reset} totalItemCount={this.props.app.xivodafone.partnerReportQuotaCount} pageSize={this.state.pageSize} changePage={this.quotaReportChangePage} />\n                                        </div>\n                                    </div>\n                                </div>\n                            }\n                            \n                            {this.state.reportType == \"Send\" &&\n                                <div className=\"tab-item active\">\n                                    <div className=\"table\">\n                                        <div className=\"top\">\n                                            <div className=\"title-default\">\n                                                Partner Gönderim Raporu\n                                            </div>\n                                            <div className=\"actions\"></div>\n                                            <div className=\"filter\">\n                                                <Form model={this.state.sendReportFormModel} handleSubmit={this.handleSubmit} onInputChange={this.onSendFormInputChange} buttonExtraClass={\"tertiary\"} buttonText={\"Filtrele\"} buttonId={\"xivodafone-report-quota-list-filter\"} />\n                                            </div>\n                                        </div>\n                                        <div className=\"bottom\">\n                                            <div className=\"table-container\">\n                                                <table className=\"sortable\">\n                                                    <thead>\n                                                        <tr>\n                                                            <th><span>Partner</span></th>\n                                                            <th><span>Kullanıcı Adı</span></th>\n                                                            <th><span>Gönderim Durumu</span></th>\n                                                            <th><span>Gönderilen Adet</span></th>\n                                                            <th><span>Kalan Adet</span></th>\n                                                            <th><span>Sözleşme Bitiş</span></th>\n                                                        </tr>\n                                                    </thead>\n                                                    <tbody>\n                                                        {this.props.app.xivodafone.partnerReportSend && this.props.app.xivodafone.partnerReportSend.map((item, i) => \n                                                            {\n                                                                return (            \n                                                                    <tr>\n                                                                        <td>{item.partnerName}</td>\n                                                                        <td>{item.campaignName}</td>\n                                                                        <td>                                                                       \n                                                                        {(item.sendingStatus === 'DRAFT' ? 'ONAYDA' :\n                                                                        (item.sendingStatus === 'COMPLETED' ? 'BEKLEMEDE' :\n                                                                        (item.sendingStatus === 'CANCELLED' ? 'İPTAL EDİLDİ' : \n                                                                        (item.sendingStatus === 'SEND' ? 'DEVAM EDİYOR' : \n                                                                        (item.sendingStatus === 'REJECTED' ? 'DÜZENLENMELİ' : \n                                                                        (item.sendingStatus === 'FINISHED' ? 'TAMAMLANDI' :\n                                                                        (item.sendingStatus === 'READYTOQUOTA' ? 'TAMAMLANDI' : ''\n                                                                        )))))))}</td>\n                                                                        <td>{item.sendCount}</td>\n                                                                        <td>{item.remainingCount}</td>\n                                                                        <td>{moment(item.contractEndDate).format('DD.MM.YYYY')}</td>\n                                                                    </tr>\n                                                                )\n                                                            }\n                                                        )}\n                                                    </tbody>\n                                                </table>\n                                            </div>\n                                        </div>\n                                        <div className=\"paging-container\">\n                                            <Paging setReset={reset => this.sendReportPagingReset = reset} totalItemCount={this.props.app.xivodafone.partnerReportSendCount} pageSize={this.state.pageSize} changePage={this.sendReportChangePage} />\n                                        </div>\n                                    </div>\n                                </div>\n                            }\n                        </div>\n                    </div>\n                </div>\n            </section>\n      );\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        app: state.app \n    }\n}\n\nexport default connect(mapStateToProps)(PartnerReport)"]},"metadata":{},"sourceType":"module"}