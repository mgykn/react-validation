{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\taertan\\\\git\\\\onemessaging\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport { combineReducers } from 'redux';\nvar initialState = {\n  userEmail: '',\n  activePopup: '',\n  loginAccessToken: '',\n  accessToken: '',\n  userType: '',\n  loading: false,\n  notification: {\n    message: '',\n    isError: false\n  },\n  agent: {\n    companies: []\n  },\n  user: {\n    groups: [],\n    receivers: [],\n    receiverCount: 0,\n    blacklist: [],\n    blacklistCount: 0,\n    blackhour: {\n      startDate: '',\n      endDate: ''\n    },\n    report: []\n  },\n  originators: [],\n  partnerInfos: []\n};\n\nvar appReducer = function appReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'USER_EMAIL':\n      return _objectSpread({}, state, {\n        userEmail: action.data\n      });\n\n    case 'LOADING':\n      return _objectSpread({}, state, {\n        loading: action.data\n      });\n\n    case 'POPUP':\n      return _objectSpread({}, state, {\n        activePopup: action.data\n      });\n\n    case 'NOTIFICATION':\n      return _objectSpread({}, state, {\n        notification: action.data\n      });\n\n    case 'ACCESS_TOKEN':\n      return _objectSpread({}, state, {\n        accessToken: action.data.accessToken,\n        userType: action.data.userType\n      });\n\n    case 'LOGIN_ACCESS_TOKEN':\n      return _objectSpread({}, state, {\n        loginAccessToken: action.data\n      });\n\n    case 'COMPANY_LIST':\n      return _objectSpread({}, state, {\n        agent: _objectSpread({}, state.agent, {\n          companies: action.data\n        })\n      });\n\n    case 'GROUP_LIST':\n      return _objectSpread({}, state, {\n        user: _objectSpread({}, state.user, {\n          groups: action.data\n        })\n      });\n\n    case 'RECEIVER_LIST':\n      return _objectSpread({}, state, {\n        user: _objectSpread({}, state.user, {\n          receivers: action.data\n        })\n      });\n\n    case 'RECEIVER_COUNT':\n      return _objectSpread({}, state, {\n        user: _objectSpread({}, state.user, {\n          receiverCount: action.data\n        })\n      });\n\n    case 'BLACKLIST':\n      return _objectSpread({}, state, {\n        user: _objectSpread({}, state.user, {\n          blacklist: action.data\n        })\n      });\n\n    case 'BLACKLIST_COUNT':\n      return _objectSpread({}, state, {\n        user: _objectSpread({}, state.user, {\n          blacklistCount: action.data\n        })\n      });\n\n    case 'BLACKHOUR':\n      return _objectSpread({}, state, {\n        user: _objectSpread({}, state.user, {\n          blackhour: {\n            startDate: action.data.startDate,\n            endDate: action.data.endDate\n          }\n        })\n      });\n\n    case 'ORIGINATORS':\n      return _objectSpread({}, state, {\n        originators: action.data\n      });\n\n    case 'PARTNERINFOS':\n      return _objectSpread({}, state, {\n        partnerInfos: action.data\n      });\n\n    case 'REPORT':\n      return _objectSpread({}, state, {\n        user: _objectSpread({}, state.user, {\n          report: action.data\n        })\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  app: appReducer\n});","map":{"version":3,"sources":["C:\\Users\\taertan\\git\\onemessaging\\src\\actions\\reducers.js"],"names":["combineReducers","initialState","userEmail","activePopup","loginAccessToken","accessToken","userType","loading","notification","message","isError","agent","companies","user","groups","receivers","receiverCount","blacklist","blacklistCount","blackhour","startDate","endDate","report","originators","partnerInfos","appReducer","state","action","type","data","app"],"mappings":"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","sourcesContent":["import {combineReducers} from 'redux';\r\n\r\nconst initialState = {\r\n    userEmail:'',\r\n    activePopup: '',\r\n    loginAccessToken: '',\r\n    accessToken: '',\r\n    userType: '',\r\n    loading: false,\r\n    notification: {\r\n        message: '',\r\n        isError: false\r\n    },\r\n    agent: {\r\n        companies: []\r\n    },\r\n    user: {\r\n        groups: [],\r\n        receivers: [],\r\n        receiverCount: 0,\r\n        blacklist: [],\r\n        blacklistCount: 0,\r\n        blackhour: {\r\n            startDate: '',\r\n            endDate: ''\r\n        },\r\n        report: []\r\n    },\r\n    originators: [],\r\n    partnerInfos: []\r\n};\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case 'USER_EMAIL':\r\n            return {\r\n                ...state,\r\n                userEmail: action.data\r\n            }\r\n        case 'LOADING':\r\n            return {\r\n                ...state,\r\n                loading: action.data\r\n            }\r\n        case 'POPUP':\r\n            return {\r\n                ...state,\r\n                activePopup: action.data\r\n            }\r\n        case 'NOTIFICATION':\r\n            return {\r\n                ...state,\r\n                notification: action.data\r\n            }\r\n        case 'ACCESS_TOKEN':\r\n            return {\r\n                ...state,\r\n                accessToken: action.data.accessToken,\r\n                userType: action.data.userType\r\n            }\r\n        case 'LOGIN_ACCESS_TOKEN':\r\n            return {\r\n                ...state,\r\n                loginAccessToken: action.data\r\n            }\r\n        case 'COMPANY_LIST':\r\n            return {\r\n                ...state,\r\n                agent: {\r\n                    ...state.agent,\r\n                    companies: action.data\r\n                }\r\n            }\r\n        case 'GROUP_LIST':\r\n            return {\r\n                ...state,\r\n                user: {\r\n                    ...state.user,\r\n                    groups: action.data\r\n                }\r\n            }\r\n        case 'RECEIVER_LIST':\r\n            return {\r\n                ...state,\r\n                user: {\r\n                    ...state.user,\r\n                    receivers: action.data\r\n                }\r\n            }\r\n        case 'RECEIVER_COUNT':\r\n            return {\r\n                ...state,\r\n                user: {\r\n                    ...state.user,\r\n                    receiverCount: action.data\r\n                }\r\n            }\r\n        case 'BLACKLIST':\r\n            return {\r\n                ...state,\r\n                user: {\r\n                    ...state.user,\r\n                    blacklist: action.data\r\n                }\r\n            }\r\n        case 'BLACKLIST_COUNT':\r\n            return {\r\n                ...state,\r\n                user: {\r\n                    ...state.user,\r\n                    blacklistCount: action.data\r\n                }\r\n            }\r\n        case 'BLACKHOUR':\r\n            return {\r\n                ...state,\r\n                user: {\r\n                    ...state.user,\r\n                    blackhour: {\r\n                        startDate: action.data.startDate,\r\n                        endDate: action.data.endDate\r\n                    }\r\n                }\r\n            }\r\n        case 'ORIGINATORS':\r\n            return {\r\n                ...state,\r\n                originators: action.data\r\n            }\r\n        case 'PARTNERINFOS':\r\n            return {\r\n                ...state,\r\n                partnerInfos: action.data\r\n            }\r\n            \r\n        case 'REPORT':\r\n            return {\r\n                ...state,\r\n                user: {\r\n                    ...state.user,\r\n                    report: action.data\r\n                }\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default combineReducers({\r\n    app: appReducer\r\n})"]},"metadata":{},"sourceType":"module"}