{"ast":null,"code":"import _classCallCheck from \"/Users/mugeyakin/Projects/react/react-validation/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/mugeyakin/Projects/react/react-validation/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/mugeyakin/Projects/react/react-validation/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/mugeyakin/Projects/react/react-validation/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/Users/mugeyakin/Projects/react/react-validation/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/mugeyakin/Projects/react/react-validation/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/mugeyakin/Projects/react/react-validation/src/pages/User/Receiver/upload.js\";\nimport React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Breadcrumb from '../../../components/breadcrumb/index';\nimport Message from '../../../components/message/index';\nimport Form from '../../../components/form/form';\nimport Button from '../../../components/form/button';\nimport LeftDetail from '../Group/_leftDetail';\nimport { groups, receivers, uploadReceiver, dispatchItem } from '../../../actions/actions';\n\nvar ReceiverUpload =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ReceiverUpload, _React$Component);\n\n  function ReceiverUpload(props) {\n    var _this;\n\n    _classCallCheck(this, ReceiverUpload);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ReceiverUpload).call(this, props));\n    _this.state = {\n      receiverPageSize: 50,\n      formModel: {\n        reapFileData: {\n          value: '',\n          valuePlaceholder: '',\n          name: 'reapFileData',\n          type: 'file',\n          label: 'Dosya Seç',\n          placeholder: 'Bilgisayarınızdan seçim yapmak için tıklayın',\n          error: 'Lütfen bir dosya seçin.',\n          valid: false,\n          touched: false,\n          validationRules: {\n            isRequired: true\n          }\n        }\n      }\n    };\n    _this.getGroupList = _this.getGroupList.bind(_assertThisInitialized(_this));\n    _this.getReceiverList = _this.getReceiverList.bind(_assertThisInitialized(_this));\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(ReceiverUpload, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {// if (this.props.app.user.groups.length < 1) {\n      //     this.getGroupList();\n      // }\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit(data) {\n      var _this2 = this;\n\n      var groupId = this.props.match.params.id;\n      data[\"groupIds\"] = [groupId];\n      var serviceData = new FormData();\n\n      for (var key in data) {\n        serviceData.append(key, data[key]);\n      }\n\n      this.props.dispatch(uploadReceiver(serviceData, function (data) {\n        _this2.getGroupList(function () {\n          _this2.getReceiverList(groupId, function () {\n            _this2.props.history.push('/user/group/detail/' + groupId);\n          });\n        });\n      }, function (data) {}));\n    }\n  }, {\n    key: \"getGroupList\",\n    value: function getGroupList(successFunc) {\n      var _this3 = this;\n\n      this.props.dispatch(groups({}, function (data) {\n        _this3.props.dispatch(dispatchItem(\"GROUP_LIST\", data.listGroup));\n\n        if (successFunc) {\n          successFunc();\n        }\n      }, function () {}));\n    }\n  }, {\n    key: \"getReceiverList\",\n    value: function getReceiverList(groupId, successFunc) {\n      var _this4 = this;\n\n      var model = {\n        page: 0,\n        size: this.state.receiverPageSize,\n        groupId: groupId\n      };\n      this.props.dispatch(receivers(model, function (data) {\n        _this4.props.dispatch(dispatchItem(\"RECEIVER_LIST\", data.receiverInfo));\n\n        _this4.props.dispatch(dispatchItem(\"RECEIVER_COUNT\", data.totalSize));\n\n        if (successFunc) {\n          successFunc();\n        }\n      }, function () {}));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this5 = this;\n\n      var groupId = this.props.match.params.id;\n      var filterGroup = this.props.app.user.groups.filter(function (item) {\n        return item.groupId === groupId;\n      });\n      var group = filterGroup.length > 0 ? filterGroup[0] : null;\n      var breadcrumbItems = [{\n        name: \"Ana Sayfa\",\n        link: \"/\"\n      }, {\n        name: 'Gruplar',\n        link: '/user/group/list'\n      }, {\n        name: group ? group.groupName : \"\",\n        link: '/user/group/detail/' + (group ? group.groupId : \"\")\n      }, {\n        name: \"Numaralar\",\n        link: '/user/group/detail/' + (group ? group.groupId : \"\") + '/receivers'\n      }, {\n        name: 'Toplu Numara Ekleme'\n      }];\n      return [React.createElement(Breadcrumb, {\n        items: breadcrumbItems,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }), React.createElement(\"section\", {\n        className: \"panel\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, React.createElement(Message, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, React.createElement(LeftDetail, {\n        item: group,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"title-default\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, \"Yeni Numara Ekle\"))), React.createElement(\"div\", {\n        className: \"upload-file\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"file-example\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: require('../../../assets/icons/icon-excel.svg'),\n        \"aria-hidden\": \"true\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }), React.createElement(\"a\", {\n        href: \"/example.xlsx\",\n        target: \"_blank\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, \"\\xD6rnek Excel d\\xF6k\\xFCman\\u0131n\\u0131 indir\")), React.createElement(\"div\", {\n        className: \"form-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, React.createElement(Form, {\n        model: this.state.formModel,\n        handleSubmit: this.handleSubmit,\n        smallTitle: \"\",\n        buttonText: \"Dosya Yükle\",\n        buttonId: \"receiver-upload-save\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }), React.createElement(Button, {\n        disabled: false,\n        extraClass: \"\",\n        onClick: function onClick() {\n          _this5.props.history.push('/user/group/detail/' + group.groupId);\n        },\n        text: \"İşlemi iptal et\",\n        id: \"receiver-upload-cancel\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }))))))];\n    }\n  }]);\n\n  return ReceiverUpload;\n}(React.Component);\n\nfunction mapStateToProps(state) {\n  return {\n    app: state.app\n  };\n}\n\nexport default withRouter(connect(mapStateToProps)(ReceiverUpload));","map":{"version":3,"sources":["/Users/mugeyakin/Projects/react/react-validation/src/pages/User/Receiver/upload.js"],"names":["React","withRouter","connect","Breadcrumb","Message","Form","Button","LeftDetail","groups","receivers","uploadReceiver","dispatchItem","ReceiverUpload","props","state","receiverPageSize","formModel","reapFileData","value","valuePlaceholder","name","type","label","placeholder","error","valid","touched","validationRules","isRequired","getGroupList","bind","getReceiverList","handleSubmit","data","groupId","match","params","id","serviceData","FormData","key","append","dispatch","history","push","successFunc","listGroup","model","page","size","receiverInfo","totalSize","filterGroup","app","user","filter","item","group","length","breadcrumbItems","link","groupName","require","Component","mapStateToProps"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,UAAP,MAAuB,sCAAvB;AACA,OAAOC,OAAP,MAAoB,mCAApB;AACA,OAAOC,IAAP,MAAiB,+BAAjB;AACA,OAAOC,MAAP,MAAmB,iCAAnB;AACA,OAAOC,UAAP,MAAuB,sBAAvB;AACA,SAASC,MAAT,EAAiBC,SAAjB,EAA4BC,cAA5B,EAA4CC,YAA5C,QAAgE,0BAAhE;;IAEMC,c;;;;;AACF,0BAAYC,KAAZ,EACA;AAAA;;AAAA;;AACI,wFAAMA,KAAN;AAEA,UAAKC,KAAL,GAAa;AACTC,MAAAA,gBAAgB,EAAE,EADT;AAETC,MAAAA,SAAS,EAAE;AACPC,QAAAA,YAAY,EAAE;AACVC,UAAAA,KAAK,EAAE,EADG;AAEVC,UAAAA,gBAAgB,EAAE,EAFR;AAGVC,UAAAA,IAAI,EAAE,cAHI;AAIVC,UAAAA,IAAI,EAAE,MAJI;AAKVC,UAAAA,KAAK,EAAE,WALG;AAMVC,UAAAA,WAAW,EAAE,8CANH;AAOVC,UAAAA,KAAK,EAAE,yBAPG;AAQVC,UAAAA,KAAK,EAAE,KARG;AASVC,UAAAA,OAAO,EAAE,KATC;AAUVC,UAAAA,eAAe,EAAE;AACbC,YAAAA,UAAU,EAAE;AADC;AAVP;AADP;AAFF,KAAb;AAoBA,UAAKC,YAAL,GAAoB,MAAKA,YAAL,CAAkBC,IAAlB,+BAApB;AACA,UAAKC,eAAL,GAAuB,MAAKA,eAAL,CAAqBD,IAArB,+BAAvB;AACA,UAAKE,YAAL,GAAoB,MAAKA,YAAL,CAAkBF,IAAlB,+BAApB;AAzBJ;AA0BC;;;;wCAEmB,CAChB;AACA;AACA;AACH;;;iCAEYG,I,EACb;AAAA;;AACI,UAAMC,OAAO,GAAG,KAAKrB,KAAL,CAAWsB,KAAX,CAAiBC,MAAjB,CAAwBC,EAAxC;AAEAJ,MAAAA,IAAI,CAAC,UAAD,CAAJ,GAAmB,CAACC,OAAD,CAAnB;AAEA,UAAII,WAAW,GAAG,IAAIC,QAAJ,EAAlB;;AACA,WAAK,IAAIC,GAAT,IAAgBP,IAAhB,EAAsB;AAClBK,QAAAA,WAAW,CAACG,MAAZ,CAAmBD,GAAnB,EAAwBP,IAAI,CAACO,GAAD,CAA5B;AACH;;AAED,WAAK3B,KAAL,CAAW6B,QAAX,CAAoBhC,cAAc,CAAC4B,WAAD,EAAc,UAACL,IAAD,EAAU;AACtD,QAAA,MAAI,CAACJ,YAAL,CAAkB,YAAM;AACpB,UAAA,MAAI,CAACE,eAAL,CAAqBG,OAArB,EAA8B,YAAM;AAAE,YAAA,MAAI,CAACrB,KAAL,CAAW8B,OAAX,CAAmBC,IAAnB,CAAwB,wBAAwBV,OAAhD;AAA0D,WAAhG;AACH,SAFD;AAGH,OAJiC,EAI/B,UAACD,IAAD,EAAU,CACZ,CALiC,CAAlC;AAMH;;;iCAEYY,W,EACb;AAAA;;AACI,WAAKhC,KAAL,CAAW6B,QAAX,CAAoBlC,MAAM,CAAC,EAAD,EAAK,UAACyB,IAAD,EAAU;AACrC,QAAA,MAAI,CAACpB,KAAL,CAAW6B,QAAX,CAAoB/B,YAAY,CAAC,YAAD,EAAesB,IAAI,CAACa,SAApB,CAAhC;;AACA,YAAGD,WAAH,EACA;AACIA,UAAAA,WAAW;AACd;AACJ,OANyB,EAMvB,YAAM,CAER,CARyB,CAA1B;AASH;;;oCAEeX,O,EAASW,W,EACzB;AAAA;;AACI,UAAIE,KAAK,GAAG;AACRC,QAAAA,IAAI,EAAE,CADE;AAERC,QAAAA,IAAI,EAAE,KAAKnC,KAAL,CAAWC,gBAFT;AAGRmB,QAAAA,OAAO,EAAEA;AAHD,OAAZ;AAMA,WAAKrB,KAAL,CAAW6B,QAAX,CAAoBjC,SAAS,CAACsC,KAAD,EAAQ,UAACd,IAAD,EAAU;AAC3C,QAAA,MAAI,CAACpB,KAAL,CAAW6B,QAAX,CAAoB/B,YAAY,CAAC,eAAD,EAAkBsB,IAAI,CAACiB,YAAvB,CAAhC;;AACA,QAAA,MAAI,CAACrC,KAAL,CAAW6B,QAAX,CAAoB/B,YAAY,CAAC,gBAAD,EAAmBsB,IAAI,CAACkB,SAAxB,CAAhC;;AACA,YAAGN,WAAH,EACA;AACIA,UAAAA,WAAW;AACd;AACJ,OAP4B,EAO1B,YAAM,CAER,CAT4B,CAA7B;AAUH;;;6BAEQ;AAAA;;AACL,UAAIX,OAAO,GAAG,KAAKrB,KAAL,CAAWsB,KAAX,CAAiBC,MAAjB,CAAwBC,EAAtC;AAEA,UAAIe,WAAW,GAAG,KAAKvC,KAAL,CAAWwC,GAAX,CAAeC,IAAf,CAAoB9C,MAApB,CAA2B+C,MAA3B,CAAkC,UAAUC,IAAV,EAAgB;AAChE,eAAOA,IAAI,CAACtB,OAAL,KAAiBA,OAAxB;AACH,OAFiB,CAAlB;AAIA,UAAIuB,KAAK,GAAGL,WAAW,CAACM,MAAZ,GAAqB,CAArB,GAAyBN,WAAW,CAAC,CAAD,CAApC,GAA0C,IAAtD;AAEA,UAAMO,eAAe,GAAG,CAAC;AACrBvC,QAAAA,IAAI,EAAE,WADe;AAErBwC,QAAAA,IAAI,EAAE;AAFe,OAAD,EAGtB;AACExC,QAAAA,IAAI,EAAE,SADR;AAEEwC,QAAAA,IAAI,EAAG;AAFT,OAHsB,EAMtB;AACExC,QAAAA,IAAI,EAAGqC,KAAK,GAAGA,KAAK,CAACI,SAAT,GAAqB,EADnC;AAEED,QAAAA,IAAI,EAAG,yBAAyBH,KAAK,GAAGA,KAAK,CAACvB,OAAT,GAAmB,EAAjD;AAFT,OANsB,EAStB;AACEd,QAAAA,IAAI,EAAE,WADR;AAEEwC,QAAAA,IAAI,EAAG,yBAAyBH,KAAK,GAAGA,KAAK,CAACvB,OAAT,GAAmB,EAAjD,IAAuD;AAFhE,OATsB,EAYtB;AACEd,QAAAA,IAAI,EAAE;AADR,OAZsB,CAAxB;AAgBA,aACI,CACI,oBAAC,UAAD;AAAY,QAAA,KAAK,EAAEuC,eAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI;AAAS,QAAA,SAAS,EAAC,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,UAAD;AAAY,QAAA,IAAI,EAAEF,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADJ,CADJ,CADJ,EAMI;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,GAAG,EAAEK,OAAO,CAAC,sCAAD,CAAjB;AAA2D,uBAAY,MAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI;AAAG,QAAA,IAAI,EAAC,eAAR;AAAwB,QAAA,MAAM,EAAC,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2DAFJ,CADJ,EAOI;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE,KAAKhD,KAAL,CAAWE,SAAxB;AAAmC,QAAA,YAAY,EAAE,KAAKgB,YAAtD;AAAoE,QAAA,UAAU,EAAE,EAAhF;AAAoF,QAAA,UAAU,EAAE,aAAhG;AAA+G,QAAA,QAAQ,EAAE,sBAAzH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI,oBAAC,MAAD;AAAQ,QAAA,QAAQ,EAAE,KAAlB;AAAyB,QAAA,UAAU,EAAE,EAArC;AAAyC,QAAA,OAAO,EAAE,mBAAM;AAAE,UAAA,MAAI,CAACnB,KAAL,CAAW8B,OAAX,CAAmBC,IAAnB,CAAwB,wBAAwBa,KAAK,CAACvB,OAAtD;AAAgE,SAA1H;AAA4H,QAAA,IAAI,EAAE,iBAAlI;AAAqJ,QAAA,EAAE,EAAE,wBAAzJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CAPJ,CANJ,CAFJ,CAFJ,CAFJ,CADJ;AA8BH;;;;EA/IwBlC,KAAK,CAAC+D,S;;AAmJnC,SAASC,eAAT,CAAyBlD,KAAzB,EAAgC;AAC5B,SAAO;AACHuC,IAAAA,GAAG,EAAEvC,KAAK,CAACuC;AADR,GAAP;AAGH;;AAED,eAAepD,UAAU,CAACC,OAAO,CAAC8D,eAAD,CAAP,CAAyBpD,cAAzB,CAAD,CAAzB","sourcesContent":["import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport {connect} from 'react-redux';\nimport Breadcrumb from '../../../components/breadcrumb/index';\nimport Message from '../../../components/message/index';\nimport Form from '../../../components/form/form';\nimport Button from '../../../components/form/button';\nimport LeftDetail from '../Group/_leftDetail';\nimport { groups, receivers, uploadReceiver, dispatchItem } from '../../../actions/actions';\n\nclass ReceiverUpload extends React.Component {\n    constructor(props)\n    {\n        super(props);\n\n        this.state = {\n            receiverPageSize: 50,\n            formModel: {\n                reapFileData: {\n                    value: '',\n                    valuePlaceholder: '',\n                    name: 'reapFileData',\n                    type: 'file',\n                    label: 'Dosya Seç',\n                    placeholder: 'Bilgisayarınızdan seçim yapmak için tıklayın',\n                    error: 'Lütfen bir dosya seçin.',\n                    valid: false,\n                    touched: false,\n                    validationRules: {\n                        isRequired: true\n                    }\n                }\n            }\n        };\n\n        this.getGroupList = this.getGroupList.bind(this);\n        this.getReceiverList = this.getReceiverList.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    componentDidMount() {\n        // if (this.props.app.user.groups.length < 1) {\n        //     this.getGroupList();\n        // }\n    }\n\n    handleSubmit(data)\n    {\n        const groupId = this.props.match.params.id;\n        \n        data[\"groupIds\"] = [groupId];\n\n        var serviceData = new FormData();\n        for (var key in data) {\n            serviceData.append(key, data[key]);\n        }\n\n        this.props.dispatch(uploadReceiver(serviceData, (data) => {\n            this.getGroupList(() => { \n                this.getReceiverList(groupId, () => { this.props.history.push('/user/group/detail/' + groupId) });\n            });\n        }, (data) => {\n        }));\n    }\n\n    getGroupList(successFunc)\n    {\n        this.props.dispatch(groups({}, (data) => {\n            this.props.dispatch(dispatchItem(\"GROUP_LIST\", data.listGroup));\n            if(successFunc)\n            {\n                successFunc();\n            }\n        }, () => {\n\n        }));\n    }\n    \n    getReceiverList(groupId, successFunc)\n    {\n        var model = {\n            page: 0,\n            size: this.state.receiverPageSize,\n            groupId: groupId\n        };\n\n        this.props.dispatch(receivers(model, (data) => {\n            this.props.dispatch(dispatchItem(\"RECEIVER_LIST\", data.receiverInfo));\n            this.props.dispatch(dispatchItem(\"RECEIVER_COUNT\", data.totalSize));\n            if(successFunc)\n            {\n                successFunc();\n            }\n        }, () => {\n\n        }));\n    }\n\n    render() {\n        var groupId = this.props.match.params.id;\n        \n        var filterGroup = this.props.app.user.groups.filter(function (item) {\n            return item.groupId === groupId;\n        });\n        \n        var group = filterGroup.length > 0 ? filterGroup[0] : null;\n        \n        const breadcrumbItems = [{\n            name: \"Ana Sayfa\",\n            link: \"/\"\n        },{\n            name: 'Gruplar',\n            link : '/user/group/list'\n        },{\n            name: (group ? group.groupName : \"\"),\n            link : '/user/group/detail/' + (group ? group.groupId : \"\")\n        },{\n            name: \"Numaralar\",\n            link : '/user/group/detail/' + (group ? group.groupId : \"\") + '/receivers'\n        },{\n            name: 'Toplu Numara Ekleme'\n        }];\n\n        return (\n            [\n                <Breadcrumb items={breadcrumbItems} />,\n                <section className=\"panel\">\n                    <Message />\n                    <div className=\"container\">\n                        <LeftDetail item={group} />\n                        <div className=\"right\">\n                            <div className=\"header\">\n                                <div className=\"title-default\">\n                                    <span>Yeni Numara Ekle</span>\n                                </div>\n                            </div>\n                            <div className=\"upload-file\">\n                                <div className=\"file-example\">\n                                    <img src={require('../../../assets/icons/icon-excel.svg')} aria-hidden=\"true\" />\n                                    <a href=\"/example.xlsx\" target=\"_blank\">\n                                        Örnek Excel dökümanını indir\n                                    </a>\n                                </div>\n                                <div className=\"form-container\">\n                                    <Form model={this.state.formModel} handleSubmit={this.handleSubmit} smallTitle={\"\"} buttonText={\"Dosya Yükle\"} buttonId={\"receiver-upload-save\"} />\n                                    <Button disabled={false} extraClass={\"\"} onClick={() => { this.props.history.push('/user/group/detail/' + group.groupId) }} text={\"İşlemi iptal et\"} id={\"receiver-upload-cancel\"} />\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </section>\n            ] \n        );\n    }\n}\n  \n\nfunction mapStateToProps(state) {\n    return {\n        app: state.app \n    }\n}\n\nexport default withRouter(connect(mapStateToProps)(ReceiverUpload))"]},"metadata":{},"sourceType":"module"}